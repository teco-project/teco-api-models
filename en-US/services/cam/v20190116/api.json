{
  "actions": {
    "AddUser": {
      "document": "This API is used to create a sub-user.",
      "input": "AddUserRequest",
      "name": "Creates a sub-user",
      "output": "AddUserResponse",
      "status": "online"
    },
    "AddUserToGroup": {
      "document": "This API is used to add users to a user group.",
      "input": "AddUserToGroupRequest",
      "name": "Adds users to a user group",
      "output": "AddUserToGroupResponse",
      "status": "online"
    },
    "AttachGroupPolicy": {
      "document": "This API (AttachGroupPolicy) is used to associate a policy with a user group.",
      "input": "AttachGroupPolicyRequest",
      "name": "Associates a policy with a user group",
      "output": "AttachGroupPolicyResponse",
      "status": "online"
    },
    "AttachRolePolicy": {
      "document": "This API (AttachRolePolicy) is used to associate a policy with a role.",
      "input": "AttachRolePolicyRequest",
      "name": "Associates a permission policy with a role",
      "output": "AttachRolePolicyResponse",
      "status": "online"
    },
    "AttachUserPolicy": {
      "document": "This API (AttachUserPolicy) is used to associates a policy with a user.",
      "input": "AttachUserPolicyRequest",
      "name": "Associates a policy with a user",
      "output": "AttachUserPolicyResponse",
      "status": "online"
    },
    "ConsumeCustomMFAToken": {
      "document": "This API is used to verify a custom multi-factor Token.",
      "input": "ConsumeCustomMFATokenRequest",
      "name": "Verifies a custom multi-factor Token",
      "output": "ConsumeCustomMFATokenResponse",
      "status": "online"
    },
    "CreateAccessKey": {
      "document": "This API is used to create an access key for a CAM user.",
      "input": "CreateAccessKeyRequest",
      "name": "Creates an access key",
      "output": "CreateAccessKeyResponse",
      "status": "online"
    },
    "CreateGroup": {
      "document": "This API is used to create a user group.",
      "input": "CreateGroupRequest",
      "name": "Creates a user group",
      "output": "CreateGroupResponse",
      "status": "online"
    },
    "CreateOIDCConfig": {
      "document": "This API is used to create role OIDC configurations.",
      "input": "CreateOIDCConfigRequest",
      "name": "Creates role OIDC configurations",
      "output": "CreateOIDCConfigResponse",
      "status": "online"
    },
    "CreatePolicy": {
      "document": "This API (CreatePolicy) is used to create a policy.",
      "input": "CreatePolicyRequest",
      "name": "Creates a policy",
      "output": "CreatePolicyResponse",
      "status": "online"
    },
    "CreatePolicyVersion": {
      "document": "This API is used to add a policy version. After creating a policy version, you can easily change the policy by changing the policy version.",
      "input": "CreatePolicyVersionRequest",
      "name": "Creates a policy version",
      "output": "CreatePolicyVersionResponse",
      "status": "online"
    },
    "CreateRole": {
      "document": "This API (CreateRole) is used to create a role.",
      "input": "CreateRoleRequest",
      "name": "Creates a role",
      "output": "CreateRoleResponse",
      "status": "online"
    },
    "CreateSAMLProvider": {
      "document": "This API is used to create a SAML identity provider.",
      "input": "CreateSAMLProviderRequest",
      "name": "Creates a SAML identity provider",
      "output": "CreateSAMLProviderResponse",
      "status": "online"
    },
    "CreateServiceLinkedRole": {
      "document": "This API is used to create a service-linked role.",
      "input": "CreateServiceLinkedRoleRequest",
      "name": "Creates a service-linked role",
      "output": "CreateServiceLinkedRoleResponse",
      "status": "online"
    },
    "CreateUserOIDCConfig": {
      "document": "This API is used to create a user OIDC configuration. Only one user OIDC IdP can be created, and the user SAML SSO IdP will be automatically disabled after it is created.",
      "input": "CreateUserOIDCConfigRequest",
      "name": "Creates user OIDC configuration",
      "output": "CreateUserOIDCConfigResponse",
      "status": "online"
    },
    "CreateUserSAMLConfig": {
      "document": "This API is used to create user SAML configurations.",
      "input": "CreateUserSAMLConfigRequest",
      "name": "Creates user SAML configurations",
      "output": "CreateUserSAMLConfigResponse",
      "status": "online"
    },
    "DeleteAccessKey": {
      "document": "This API is used to delete an access key for a CAM user.\nCalling this API is a high-risk operation because the key cannot be recovered once deleted and Tencent Cloud will deny all requests that use this key. Proceed with caution.",
      "input": "DeleteAccessKeyRequest",
      "name": "Deletes an access key",
      "output": "DeleteAccessKeyResponse",
      "status": "online"
    },
    "DeleteGroup": {
      "document": "This API is used to delete a user group.",
      "input": "DeleteGroupRequest",
      "name": "Deletes a user group",
      "output": "DeleteGroupResponse",
      "status": "online"
    },
    "DeleteOIDCConfig": {
      "document": "This API is used to delete OIDC IdPs.",
      "input": "DeleteOIDCConfigRequest",
      "name": "Deletes OIDC IdPs",
      "output": "DeleteOIDCConfigResponse",
      "status": "online"
    },
    "DeletePolicy": {
      "document": "This API (DeletePolicy) is used to delete a policy.",
      "input": "DeletePolicyRequest",
      "name": "Deletes a policy",
      "output": "DeletePolicyResponse",
      "status": "online"
    },
    "DeletePolicyVersion": {
      "document": "This API is used to delete a policy version of a policy.",
      "input": "DeletePolicyVersionRequest",
      "name": "Deletes a policy version",
      "output": "DeletePolicyVersionResponse",
      "status": "online"
    },
    "DeleteRole": {
      "document": "This API (DeleteRole) is used to delete a specified role.",
      "input": "DeleteRoleRequest",
      "name": "Deletes a role",
      "output": "DeleteRoleResponse",
      "status": "online"
    },
    "DeleteRolePermissionsBoundary": {
      "document": "This API is used to delete a role permission boundary.",
      "input": "DeleteRolePermissionsBoundaryRequest",
      "name": "Deletes role permission boundary",
      "output": "DeleteRolePermissionsBoundaryResponse",
      "status": "online"
    },
    "DeleteSAMLProvider": {
      "document": "This API is used to delete a SAML identity provider.",
      "input": "DeleteSAMLProviderRequest",
      "name": "Deletes a SAML identity provider",
      "output": "DeleteSAMLProviderResponse",
      "status": "online"
    },
    "DeleteServiceLinkedRole": {
      "document": "This API is used to delete a service-linked role.",
      "input": "DeleteServiceLinkedRoleRequest",
      "name": "Deletes a service-linked role",
      "output": "DeleteServiceLinkedRoleResponse",
      "status": "online"
    },
    "DeleteUser": {
      "document": "This API is used to delete a sub-user.",
      "input": "DeleteUserRequest",
      "name": "Deletes a sub-user",
      "output": "DeleteUserResponse",
      "status": "online"
    },
    "DeleteUserPermissionsBoundary": {
      "document": "This API is used to delete a user permission boundary.",
      "input": "DeleteUserPermissionsBoundaryRequest",
      "name": "Deletes user permission boundary",
      "output": "DeleteUserPermissionsBoundaryResponse",
      "status": "online"
    },
    "DescribeOIDCConfig": {
      "document": "This API is used to query role OIDC configurations.",
      "input": "DescribeOIDCConfigRequest",
      "name": "Queries role OIDC configurations",
      "output": "DescribeOIDCConfigResponse",
      "status": "online"
    },
    "DescribeRoleList": {
      "document": "This API (DescribeRoleList) is used to get the role list under the account.",
      "input": "DescribeRoleListRequest",
      "name": "Gets a role list",
      "output": "DescribeRoleListResponse",
      "status": "online"
    },
    "DescribeSafeAuthFlagColl": {
      "document": "This API is used to get a sub-account’s security settings.",
      "input": "DescribeSafeAuthFlagCollRequest",
      "name": "Gets a sub-account’s security settings",
      "output": "DescribeSafeAuthFlagCollResponse",
      "status": "online"
    },
    "DescribeSafeAuthFlagIntl": {
      "document": "This API is used to query security settings.",
      "input": "DescribeSafeAuthFlagIntlRequest",
      "name": "Queries security settings",
      "output": "DescribeSafeAuthFlagIntlResponse",
      "status": "online"
    },
    "DescribeSubAccounts": {
      "document": "This API is used to query sub-users through the sub-user UIN list.",
      "input": "DescribeSubAccountsRequest",
      "name": "Queries sub-users through sub-user UIN list",
      "output": "DescribeSubAccountsResponse",
      "status": "online"
    },
    "DescribeUserOIDCConfig": {
      "document": "This API is used to query the user OIDC configuration.",
      "input": "DescribeUserOIDCConfigRequest",
      "name": "Queries user OIDC configuration",
      "output": "DescribeUserOIDCConfigResponse",
      "status": "online"
    },
    "DescribeUserSAMLConfig": {
      "document": "This API is used to query user SAML configurations.",
      "input": "DescribeUserSAMLConfigRequest",
      "name": "Queries user SAML configurations",
      "output": "DescribeUserSAMLConfigResponse",
      "status": "online"
    },
    "DetachGroupPolicy": {
      "document": "This API (DetachGroupPolicy) is used to unassociate a policy and a user group.",
      "input": "DetachGroupPolicyRequest",
      "name": "Unassociate a policy and a user group",
      "output": "DetachGroupPolicyResponse",
      "status": "online"
    },
    "DetachRolePolicy": {
      "document": "This API (DetachRolePolicy) is used to unassociate a policy and a role.",
      "input": "DetachRolePolicyRequest",
      "name": "Unassociates a policy and a role",
      "output": "DetachRolePolicyResponse",
      "status": "online"
    },
    "DetachUserPolicy": {
      "document": "This API (DetachUserPolicy) is used to unassociate a policy and a user.",
      "input": "DetachUserPolicyRequest",
      "name": "Unassociates a policy and a user",
      "output": "DetachUserPolicyResponse",
      "status": "online"
    },
    "DisableUserSSO": {
      "document": "This API is used to disable user SSO.",
      "input": "DisableUserSSORequest",
      "name": "Disables user SSO",
      "output": "DisableUserSSOResponse",
      "status": "online"
    },
    "GetAccountSummary": {
      "document": "This API is used to query account summary. ",
      "input": "GetAccountSummaryRequest",
      "name": "Queries account summary",
      "output": "GetAccountSummaryResponse",
      "status": "online"
    },
    "GetCustomMFATokenInfo": {
      "document": "This API is used to get information associated with a custom multi-factor Token",
      "input": "GetCustomMFATokenInfoRequest",
      "name": "Gets information associated with a custom multi-factor Token",
      "output": "GetCustomMFATokenInfoResponse",
      "status": "online"
    },
    "GetGroup": {
      "document": "This API is used to query user group details.",
      "input": "GetGroupRequest",
      "name": "Queries user group details",
      "output": "GetGroupResponse",
      "status": "online"
    },
    "GetPolicy": {
      "document": "This API (GetPolicy) is used to query and view policy details.",
      "input": "GetPolicyRequest",
      "name": "Views policy details",
      "output": "GetPolicyResponse",
      "status": "online"
    },
    "GetPolicyVersion": {
      "document": "This API is used to query policy version details.",
      "input": "GetPolicyVersionRequest",
      "name": "Queries policy version details",
      "output": "GetPolicyVersionResponse",
      "status": "online"
    },
    "GetRole": {
      "document": "This API (GetRole) is used to get the details of a specified role.",
      "input": "GetRoleRequest",
      "name": "Gets role details",
      "output": "GetRoleResponse",
      "status": "online"
    },
    "GetSAMLProvider": {
      "document": "This API is used to query SAML identity provider details.",
      "input": "GetSAMLProviderRequest",
      "name": "Queries SAML Identity provider details",
      "output": "GetSAMLProviderResponse",
      "status": "online"
    },
    "GetSecurityLastUsed": {
      "document": "This API is used to get a key’s recent usage details.",
      "input": "GetSecurityLastUsedRequest",
      "name": "Gets a key’s recent usage details",
      "output": "GetSecurityLastUsedResponse",
      "status": "online"
    },
    "GetServiceLinkedRoleDeletionStatus": {
      "document": "This API is used to get the status of the service-linked role deletion based on the `TaskId`",
      "input": "GetServiceLinkedRoleDeletionStatusRequest",
      "name": "Gets the status of the service-linked role deletion",
      "output": "GetServiceLinkedRoleDeletionStatusResponse",
      "status": "online"
    },
    "GetUser": {
      "document": "This API is used to query sub-users.",
      "input": "GetUserRequest",
      "name": "Queries sub-users",
      "output": "GetUserResponse",
      "status": "online"
    },
    "GetUserAppId": {
      "document": "This API is used to get the user AppId.",
      "input": "GetUserAppIdRequest",
      "name": "Gets the user AppId",
      "output": "GetUserAppIdResponse",
      "status": "online"
    },
    "ListAccessKeys": {
      "document": "This API is used to list the access keys associated with a specified CAM user.",
      "input": "ListAccessKeysRequest",
      "name": "Lists access keys",
      "output": "ListAccessKeysResponse",
      "status": "online"
    },
    "ListAttachedGroupPolicies": {
      "document": "This API (ListAttachedGroupPolicies) is used to query the list of policies associated with a user group.",
      "input": "ListAttachedGroupPoliciesRequest",
      "name": "Queries policy list associated with a user group",
      "output": "ListAttachedGroupPoliciesResponse",
      "status": "online"
    },
    "ListAttachedRolePolicies": {
      "document": "This API (ListAttachedRolePolicies) is used to obtain the list of the policies associated with a role.",
      "input": "ListAttachedRolePoliciesRequest",
      "name": "Gets the list of policies associated with a role",
      "output": "ListAttachedRolePoliciesResponse",
      "status": "online"
    },
    "ListAttachedUserAllPolicies": {
      "document": "This API is used to list policies associated with the user (including those inherited from the user group).",
      "input": "ListAttachedUserAllPoliciesRequest",
      "name": "Lists policies associated with the user (including those inherited from the user group)",
      "output": "ListAttachedUserAllPoliciesResponse",
      "status": "online"
    },
    "ListAttachedUserPolicies": {
      "document": "This API (ListAttachedUserPolicies) is used to query the list of policies associated with a sub-account.",
      "input": "ListAttachedUserPoliciesRequest",
      "name": "Queries policy list associated with a sub-account",
      "output": "ListAttachedUserPoliciesResponse",
      "status": "online"
    },
    "ListCollaborators": {
      "document": "This API is used to get the collaborator list.",
      "input": "ListCollaboratorsRequest",
      "name": "Gets collaborator list",
      "output": "ListCollaboratorsResponse",
      "status": "online"
    },
    "ListEntitiesForPolicy": {
      "document": "This API (ListEntitiesForPolicy) is used to query the list of entities associated with a policy.",
      "input": "ListEntitiesForPolicyRequest",
      "name": "Queries entity list associated with a policy",
      "output": "ListEntitiesForPolicyResponse",
      "status": "online"
    },
    "ListGroups": {
      "document": "This API is used to query the list of user groups.",
      "input": "ListGroupsRequest",
      "name": "This API is used to query the list of user groups.",
      "output": "ListGroupsResponse",
      "status": "online"
    },
    "ListGroupsForUser": {
      "document": "This API is used to list user groups associated with a user.",
      "input": "ListGroupsForUserRequest",
      "name": "Lists user groups associated with a user",
      "output": "ListGroupsForUserResponse",
      "status": "online"
    },
    "ListPolicies": {
      "document": "This API is used to query the policy list.",
      "input": "ListPoliciesRequest",
      "name": "Queries the list of policies",
      "output": "ListPoliciesResponse",
      "status": "online"
    },
    "ListPolicyVersions": {
      "document": "This API is used to get the list of policy versions.",
      "input": "ListPolicyVersionsRequest",
      "name": "Gets a list of policy versions",
      "output": "ListPolicyVersionsResponse",
      "status": "online"
    },
    "ListSAMLProviders": {
      "document": "This API is used to query the list of SAML identity providers.",
      "input": "ListSAMLProvidersRequest",
      "name": "Queries the list of SAML identity providers",
      "output": "ListSAMLProvidersResponse",
      "status": "online"
    },
    "ListUsers": {
      "document": "This API is used to pull sub-users.",
      "input": "ListUsersRequest",
      "name": "Pulls sub-users",
      "output": "ListUsersResponse",
      "status": "online"
    },
    "ListUsersForGroup": {
      "document": "This API is used to query the list of users associated with a user group.",
      "input": "ListUsersForGroupRequest",
      "name": "Queries the list of users associated with a user group",
      "output": "ListUsersForGroupResponse",
      "status": "online"
    },
    "PutRolePermissionsBoundary": {
      "document": "This API is used to set a role permission boundary.",
      "input": "PutRolePermissionsBoundaryRequest",
      "name": "Sets role permission boundary",
      "output": "PutRolePermissionsBoundaryResponse",
      "status": "online"
    },
    "PutUserPermissionsBoundary": {
      "document": "This API is used to set a user permission boundary.",
      "input": "PutUserPermissionsBoundaryRequest",
      "name": "Sets user permission boundary",
      "output": "PutUserPermissionsBoundaryResponse",
      "status": "online"
    },
    "RemoveUserFromGroup": {
      "document": "This API is used to delete users from a user group.",
      "input": "RemoveUserFromGroupRequest",
      "name": "Deletes users from a user group",
      "output": "RemoveUserFromGroupResponse",
      "status": "online"
    },
    "SetDefaultPolicyVersion": {
      "document": "This API is used to set the operative policy version.",
      "input": "SetDefaultPolicyVersionRequest",
      "name": "Sets operative policy version",
      "output": "SetDefaultPolicyVersionResponse",
      "status": "online"
    },
    "SetMfaFlag": {
      "document": "This API is used to set account verification for login and sensitive operations for sub-users.",
      "input": "SetMfaFlagRequest",
      "name": "Sets account verification for login and sensitive operations for sub-users.",
      "output": "SetMfaFlagResponse",
      "status": "online"
    },
    "TagRole": {
      "document": "This API is used to bind tags to a role.",
      "input": "TagRoleRequest",
      "name": "Binds tags to a role",
      "output": "TagRoleResponse",
      "status": "online"
    },
    "UntagRole": {
      "document": "This API is used to unbind tags from a role.",
      "input": "UntagRoleRequest",
      "name": "Unbinds tags from a role",
      "output": "UntagRoleResponse",
      "status": "online"
    },
    "UpdateAccessKey": {
      "document": "This API is used to update an access key for a CAM user.",
      "input": "UpdateAccessKeyRequest",
      "name": "Updates an access key",
      "output": "UpdateAccessKeyResponse",
      "status": "online"
    },
    "UpdateAssumeRolePolicy": {
      "document": "This API (UpdateAssumeRolePolicy) is used to modify the trust policy of a role.",
      "input": "UpdateAssumeRolePolicyRequest",
      "name": "Modifies the trust policy of a role",
      "output": "UpdateAssumeRolePolicyResponse",
      "status": "online"
    },
    "UpdateGroup": {
      "document": "This API is used to update a user group.",
      "input": "UpdateGroupRequest",
      "name": "Updates a user group",
      "output": "UpdateGroupResponse",
      "status": "online"
    },
    "UpdateOIDCConfig": {
      "document": "This API is used to modify role OIDC configurations.",
      "input": "UpdateOIDCConfigRequest",
      "name": "Modifies role OIDC configurations",
      "output": "UpdateOIDCConfigResponse",
      "status": "online"
    },
    "UpdatePolicy": {
      "document": "This API is used to update a policy.\nThis API will update the default version of an existing policy instead of creating a new one. If no policy exists, a default version will be created.",
      "input": "UpdatePolicyRequest",
      "name": "Updates policy information",
      "output": "UpdatePolicyResponse",
      "status": "online"
    },
    "UpdateRoleConsoleLogin": {
      "document": "This API is used to modify a role's login permissions.",
      "input": "UpdateRoleConsoleLoginRequest",
      "name": "Modifies a role's login permissions",
      "output": "UpdateRoleConsoleLoginResponse",
      "status": "online"
    },
    "UpdateRoleDescription": {
      "document": "This API (UpdateRoleDescription) is used to modify the description of a role.",
      "input": "UpdateRoleDescriptionRequest",
      "name": "Modifies the description of a role",
      "output": "UpdateRoleDescriptionResponse",
      "status": "online"
    },
    "UpdateSAMLProvider": {
      "document": "This API is used to update SAML identity provider information.",
      "input": "UpdateSAMLProviderRequest",
      "name": "Updates SAML identity provider information",
      "output": "UpdateSAMLProviderResponse",
      "status": "online"
    },
    "UpdateUser": {
      "document": "This API is used to update a sub-user.",
      "input": "UpdateUserRequest",
      "name": "Updates a sub-user",
      "output": "UpdateUserResponse",
      "status": "online"
    },
    "UpdateUserOIDCConfig": {
      "document": "This API is used to modify the user OIDC configuration.",
      "input": "UpdateUserOIDCConfigRequest",
      "name": "Modifies user OIDC configuration",
      "output": "UpdateUserOIDCConfigResponse",
      "status": "online"
    },
    "UpdateUserSAMLConfig": {
      "document": "This API is used to modify user SAML configurations.",
      "input": "UpdateUserSAMLConfigRequest",
      "name": "Modifies user SAML configurations",
      "output": "UpdateUserSAMLConfigResponse",
      "status": "online"
    }
  },
  "metadata": {
    "apiVersion": "2019-01-16",
    "serviceNameCN": "访问管理",
    "serviceShortName": "cam"
  },
  "objects": {
    "AccessKey": {
      "document": "Access key list",
      "members": [
        {
          "document": "Access key ID",
          "member": "string",
          "name": "AccessKeyId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Key status. Valid values: Active (activated), Inactive (not activated)",
          "member": "string",
          "name": "Status",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Creation time",
          "member": "datetime",
          "name": "CreateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "AccessKeyDetail": {
      "document": "Access key",
      "members": [
        {
          "document": "Access key ID",
          "member": "string",
          "name": "AccessKeyId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Access key, which is visible only when it is created. Keep it properly.",
          "member": "string",
          "name": "SecretAccessKey",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Key status. Valid values: `Active` (activated), `Inactive` (not activated).",
          "member": "string",
          "name": "Status",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Creation time",
          "member": "datetime",
          "name": "CreateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "AddUserRequest": {
      "document": "AddUser request structure.",
      "members": [
        {
          "document": "Sub-user username",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "document": "Sub-user remarks",
          "member": "string",
          "name": "Remark",
          "required": false,
          "type": "string"
        },
        {
          "document": "Whether or not the sub-user is allowed to log in to the console. 0: No; 1: Yes.",
          "member": "uint64",
          "name": "ConsoleLogin",
          "required": false,
          "type": "int"
        },
        {
          "document": "Whether or not to generate keys for sub-users. 0: No; 1: Yes.",
          "member": "uint64",
          "name": "UseApi",
          "required": false,
          "type": "int"
        },
        {
          "document": "Sub-user's console login password. If no password rules have been set, the password must have a minimum of 8 characters containing uppercase letters, lowercase letters, digits, and special characters by default. This parameter will be valid only when the sub-user is allowed to log in to the console. If it is not specified and console login is allowed, the system will automatically generate a random 32-character password that contains uppercase letters, lowercase letters, digits, and special characters.",
          "member": "string",
          "name": "Password",
          "required": false,
          "type": "string"
        },
        {
          "document": "If the sub-user needs to reset their password when they next log in to the console. 0: No; 1: Yes.",
          "member": "uint64",
          "name": "NeedResetPassword",
          "required": false,
          "type": "int"
        },
        {
          "document": "Mobile number",
          "member": "string",
          "name": "PhoneNum",
          "required": false,
          "type": "string"
        },
        {
          "document": "Country/Area Code",
          "member": "string",
          "name": "CountryCode",
          "required": false,
          "type": "string"
        },
        {
          "document": "Email",
          "member": "string",
          "name": "Email",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AddUserResponse": {
      "document": "AddUser response structure.",
      "members": [
        {
          "document": "Sub-user UIN",
          "member": "uint64",
          "name": "Uin",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user username",
          "member": "string",
          "name": "Name",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "If the combination of input parameters indicates that a random password should be generated, the generated password is returned",
          "member": "string",
          "name": "Password",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user's key ID",
          "member": "string",
          "name": "SecretId",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user's secret key",
          "member": "string",
          "name": "SecretKey",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user UID",
          "member": "uint64",
          "name": "Uid",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AddUserToGroupRequest": {
      "document": "AddUserToGroup request structure.",
      "members": [
        {
          "document": "The association between the user group ID and the sub-user UIN/UID.",
          "example": "无",
          "member": "GroupIdOfUidInfo",
          "name": "Info",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "AddUserToGroupResponse": {
      "document": "AddUserToGroup response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AttachEntityOfPolicy": {
      "document": "The entity associated with the policy",
      "members": [
        {
          "document": "Entity ID",
          "member": "string",
          "name": "Id",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Entity Name\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Entity UIN\nNote: This field may return null, indicating that no valid value was found.",
          "member": "uint64",
          "name": "Uin",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Type of entity association. 1: Associate by users; 2: Associate by User Groups",
          "member": "uint64",
          "name": "RelatedType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy association time\nNote: this field may return `null`, indicating that no valid value was found.",
          "member": "string",
          "name": "AttachmentTime",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "AttachGroupPolicyRequest": {
      "document": "AttachGroupPolicy request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "User Group ID",
          "member": "uint64",
          "name": "AttachGroupId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "AttachGroupPolicyResponse": {
      "document": "AttachGroupPolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AttachPolicyInfo": {
      "document": "Associated policy",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy name\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "PolicyName",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Time created\nNote: This field may return null, indicating that no valid value was found.",
          "member": "datetime",
          "name": "AddTime",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "How the policy was created: 1: Via console; 2: Via syntax\nNote: This field may return null, indicating that no valid value was found.",
          "member": "uint64",
          "name": "CreateMode",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Valid values: `user` and `QCS`\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "PolicyType",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Policy remarks",
          "member": "string",
          "name": "Remark",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Root account of the operator associating the policy\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "OperateOwnerUin",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "The ID of the account associating the policy. If `UinType` is 0, this indicates that this is a sub-account `UIN`. If `UinType` is 1, this indicates this is a role ID",
          "member": "string",
          "name": "OperateUin",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "If `UinType` is 0, `OperateUin` indicates that this is a sub-account `UIN`. If `UinType` is 1, `OperateUin` indicates that this is a role ID",
          "member": "uint64",
          "name": "OperateUinType",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Queries if the policy has been deactivated\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "Deactived",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "List of deprecated products\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "DeactivedDetail",
          "required": true,
          "type": "list",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "AttachRolePolicyRequest": {
      "document": "AttachRolePolicy request structure.",
      "members": [
        {
          "document": "Policy ID. Either `PolicyId` or `PolicyName` must be entered",
          "member": "uint64",
          "name": "PolicyId",
          "required": false,
          "type": "int"
        },
        {
          "document": "Role ID, used to specify a role. Input either `AttachRoleId` or `AttachRoleName`",
          "member": "string",
          "name": "AttachRoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name, used to specify a role. Input either `AttachRoleId` or `AttachRoleName`",
          "member": "string",
          "name": "AttachRoleName",
          "required": false,
          "type": "string"
        },
        {
          "document": "Policy name. Either `PolicyId` or `PolicyName` must be entered",
          "member": "string",
          "name": "PolicyName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AttachRolePolicyResponse": {
      "document": "AttachRolePolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AttachUserPolicyRequest": {
      "document": "AttachUserPolicy request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Sub-account UIN",
          "member": "uint64",
          "name": "AttachUin",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "AttachUserPolicyResponse": {
      "document": "AttachUserPolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AttachedPolicyOfRole": {
      "document": "Policy associated with the role",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy name",
          "member": "string",
          "name": "PolicyName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time of association",
          "member": "string",
          "name": "AddTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Policy type. `User` indicates custom policy; `QCS` indicates preset policy\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "PolicyType",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Policy creation method. 1: indicates the policy was created based on product function or item permission; other values indicate the policy was created based on the policy syntax",
          "member": "uint64",
          "name": "CreateMode",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Whether the product has been deprecated (0: no; 1: yes)\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "Deactived",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "List of deprecated products\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "DeactivedDetail",
          "required": true,
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "Policy description\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "AttachedUserPolicy": {
      "document": "Details of policies associated with the user",
      "members": [
        {
          "document": "Policy ID.",
          "member": "string",
          "name": "PolicyId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Policy name.",
          "member": "string",
          "name": "PolicyName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Policy description.",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Creation time.",
          "member": "string",
          "name": "AddTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Policy type (`1`: custom policy; `2`: preset policy).",
          "member": "string",
          "name": "StrategyType",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Creation mode (`1`: create by product feature or project permission; other values: create by policy syntax).",
          "member": "string",
          "name": "CreateMode",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Information on policies inherited from the user group.\nNote: this field may return `null`, indicating that no valid values can be obtained.",
          "member": "AttachedUserPolicyGroupInfo",
          "name": "Groups",
          "required": true,
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "Whether the product has been deprecated (`0`: no; `1`: yes).\nNote: this field may return `null`, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "Deactived",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "List of deprecated products.\nNote: this field may return `null`, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "DeactivedDetail",
          "required": true,
          "type": "list",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "AttachedUserPolicyGroupInfo": {
      "document": "Information on policies that are associated with the user and inherited from the user group",
      "members": [
        {
          "document": "Group ID.",
          "example": "10012",
          "member": "uint64",
          "name": "GroupId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Group name.",
          "example": "group_one",
          "member": "string",
          "name": "GroupName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "ConsumeCustomMFATokenRequest": {
      "document": "ConsumeCustomMFAToken request structure.",
      "members": [
        {
          "document": "Custom multi-factor verification Token",
          "member": "string",
          "name": "MFAToken",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ConsumeCustomMFATokenResponse": {
      "document": "ConsumeCustomMFAToken response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateAccessKeyRequest": {
      "document": "CreateAccessKey request structure.",
      "members": [
        {
          "document": "UIN of the specified user. If this parameter is left empty, the access key will be created for the current user by default.",
          "example": "123456",
          "member": "uint64",
          "name": "TargetUin",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "CreateAccessKeyResponse": {
      "document": "CreateAccessKey response structure.",
      "members": [
        {
          "document": "Access key\nNote: This field may return null, indicating that no valid values can be obtained.",
          "example": "无",
          "member": "AccessKeyDetail",
          "name": "AccessKey",
          "required": true,
          "type": "object",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateGroupRequest": {
      "document": "CreateGroup request structure.",
      "members": [
        {
          "document": "User Group name",
          "member": "string",
          "name": "GroupName",
          "required": true,
          "type": "string"
        },
        {
          "document": "User Group description",
          "member": "string",
          "name": "Remark",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateGroupResponse": {
      "document": "CreateGroup response structure.",
      "members": [
        {
          "document": "User Group ID",
          "member": "uint64",
          "name": "GroupId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateOIDCConfigRequest": {
      "document": "CreateOIDCConfig request structure.",
      "members": [
        {
          "document": "IdP URL.",
          "example": "https://xulongliang.authing.cn/oidc",
          "member": "string",
          "name": "IdentityUrl",
          "required": true,
          "type": "string"
        },
        {
          "document": "Public key for signature, which must be Base64-encoded.",
          "example": "无",
          "member": "string",
          "name": "IdentityKey",
          "required": true,
          "type": "string"
        },
        {
          "document": "Client ID.",
          "example": "61adcf00620c31e3ddbc9546",
          "member": "string",
          "name": "ClientId",
          "required": true,
          "type": "list"
        },
        {
          "document": "Name.",
          "example": "OIDC",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "document": "Description.",
          "example": "描述",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateOIDCConfigResponse": {
      "document": "CreateOIDCConfig response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreatePolicyRequest": {
      "document": "CreatePolicy request structure.",
      "members": [
        {
          "document": "Policy name",
          "member": "string",
          "name": "PolicyName",
          "required": true,
          "type": "string"
        },
        {
          "document": "Policy document, such as `{\"version\":\"2.0\",\"statement\":[{\"action\":\"name/sts:AssumeRole\",\"effect\":\"allow\",\"principal\":{\"service\":[\"cloudaudit.cloud.tencent.com\",\"cls.cloud.tencent.com\"]}}]}`, where `principal` is used to specify the resources that the role is authorized to access. For more information on this parameter, please see the `RoleInfo` output parameter of the [GetRole](https://intl.cloud.tencent.com/document/product/598/36221?from_cn_redirect=1) API",
          "member": "string",
          "name": "PolicyDocument",
          "required": true,
          "type": "string"
        },
        {
          "document": "Policy description",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreatePolicyResponse": {
      "document": "CreatePolicy response structure.",
      "members": [
        {
          "document": "ID of newly added policy",
          "member": "uint64",
          "name": "PolicyId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreatePolicyVersionRequest": {
      "document": "CreatePolicyVersion request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "The policy document to use as the content for the new version",
          "member": "string",
          "name": "PolicyDocument",
          "required": true,
          "type": "string"
        },
        {
          "document": "Specifies whether to set this version as the default version",
          "member": "bool",
          "name": "SetAsDefault",
          "required": true,
          "type": "bool"
        }
      ],
      "type": "object"
    },
    "CreatePolicyVersionResponse": {
      "document": "CreatePolicyVersion response structure.",
      "members": [
        {
          "document": "Policy version ID\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "VersionId",
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateRoleRequest": {
      "document": "CreateRole request structure.",
      "members": [
        {
          "document": "Role name",
          "example": "test_1234544",
          "member": "string",
          "name": "RoleName",
          "required": true,
          "type": "string"
        },
        {
          "document": "Policy document",
          "example": "%7B%22version%22%3A%222.0%22%2C%22statement%22%3A%5B%7B%22action%22%3A%22name%2Fsts%3AAssumeRole%22%2C%22effect%22%3A%22allow%22%2C%22principal%22%3A%7B%22service%22%3A%5B%22cloudaudit.cloud.tencent.com%22%2C%22cls.cloud.tencent.com%22%5D%7D%7D%5D%7D",
          "member": "string",
          "name": "PolicyDocument",
          "required": true,
          "type": "string"
        },
        {
          "document": "Role description",
          "example": "abc",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        },
        {
          "document": "Whether login is allowed. 1: yes, 0: no",
          "example": "0",
          "member": "uint64",
          "name": "ConsoleLogin",
          "required": false,
          "type": "int"
        },
        {
          "document": "The maximum validity period of the temporary key for creating a role (range: 0-43200)",
          "example": "3600",
          "member": "uint64",
          "name": "SessionDuration",
          "required": false,
          "type": "int"
        },
        {
          "document": "Tags bound to the role.",
          "example": "无",
          "member": "RoleTags",
          "name": "Tags",
          "required": false,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "CreateRoleResponse": {
      "document": "CreateRole response structure.",
      "members": [
        {
          "document": "Role ID\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "RoleId",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateSAMLProviderRequest": {
      "document": "CreateSAMLProvider request structure.",
      "members": [
        {
          "document": "SAML identity provider name",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "document": "SAML identity provider description",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string"
        },
        {
          "document": "SAML identity provider metadata document (Base64)",
          "member": "string",
          "name": "SAMLMetadataDocument",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateSAMLProviderResponse": {
      "document": "CreateSAMLProvider response structure.",
      "members": [
        {
          "document": "SAML identity provider resource descriptor",
          "member": "string",
          "name": "ProviderArn",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateServiceLinkedRoleRequest": {
      "document": "CreateServiceLinkedRole request structure.",
      "members": [
        {
          "document": "Authorized service, i.e., Tencent Cloud service entity with this role attached.",
          "example": "[\"ccs.qcloud.com\\n\"]",
          "member": "string",
          "name": "QCSServiceName",
          "required": true,
          "type": "list"
        },
        {
          "document": "Custom suffix. A string you provide, which is combined with the service-provided prefix to form the complete role name.",
          "example": "forTest",
          "member": "string",
          "name": "CustomSuffix",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role description.",
          "example": "ccsLinkedRole",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        },
        {
          "document": "Tags bound to the role.",
          "example": "无",
          "member": "RoleTags",
          "name": "Tags",
          "required": false,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "CreateServiceLinkedRoleResponse": {
      "document": "CreateServiceLinkedRole response structure.",
      "members": [
        {
          "document": "Role ID",
          "member": "string",
          "name": "RoleId",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateUserOIDCConfigRequest": {
      "document": "CreateUserOIDCConfig request structure.",
      "members": [
        {
          "document": "OpenID Connect IdP URL.\nIt corresponds to the value of the `issuer` field in the `Openid-configuration` provided by the enterprise IdP.",
          "example": "https://xulongliang.authing.cn/oidc",
          "member": "string",
          "name": "IdentityUrl",
          "required": true,
          "type": "string"
        },
        {
          "document": "Signature public key, which is used to verify the OpenID Connect IdP's ID token and must be Base64-encoded. For the security of your account, we recommend you rotate it regularly.",
          "example": "无",
          "member": "string",
          "name": "IdentityKey",
          "required": true,
          "type": "string"
        },
        {
          "document": "Client ID registered with the OpenID Connect IdP.",
          "example": "61adcf00620c31e3ddbc9546",
          "member": "string",
          "name": "ClientId",
          "required": true,
          "type": "string"
        },
        {
          "document": "OpenID Connect IdP authorization endpoint. It corresponds to the value of the `authorization_endpoint` field in the `Openid-configuration` provided by the enterprise IdP.",
          "example": "https://console.authing.cn/console/get-started/61adcf00620c31e3d",
          "member": "string",
          "name": "AuthorizationEndpoint",
          "required": true,
          "type": "string"
        },
        {
          "document": "Authorization response type, which is always `id_token`.",
          "example": "id_token",
          "member": "string",
          "name": "ResponseType",
          "required": true,
          "type": "string"
        },
        {
          "document": "Authorization response mode. Valid values: form_post (recommended); fragment.",
          "example": "fragment",
          "member": "string",
          "name": "ResponseMode",
          "required": true,
          "type": "string"
        },
        {
          "document": "Mapping field name. It indicates which field in the `id_token` of the IdP is mapped to the username of a sub-user. It is usually the `sub` or `name` field",
          "example": "sub",
          "member": "string",
          "name": "MappingFiled",
          "required": true,
          "type": "string"
        },
        {
          "document": "Authorization information scope. Valid values: openid (default); email; profile.",
          "example": "无",
          "member": "string",
          "name": "Scope",
          "required": false,
          "type": "list"
        },
        {
          "document": "Description",
          "example": "描述",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateUserOIDCConfigResponse": {
      "document": "CreateUserOIDCConfig response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateUserSAMLConfigRequest": {
      "document": "CreateUserSAMLConfig request structure.",
      "members": [
        {
          "document": "SAML metadata document, which must be Base64 encoded.",
          "example": "metadataDocumentDemo",
          "member": "string",
          "name": "SAMLMetadataDocument",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateUserSAMLConfigResponse": {
      "document": "CreateUserSAMLConfig response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteAccessKeyRequest": {
      "document": "DeleteAccessKey request structure.",
      "members": [
        {
          "document": "ID of the specified access key that needs to be deleted",
          "example": "AKIDtmV4QYS9dx4yhEZllY8VebL2c0Tlqorp",
          "member": "string",
          "name": "AccessKeyId",
          "required": true,
          "type": "string"
        },
        {
          "document": "UIN of the specified user. If this parameter is left empty, the access key will be deleted for the current user by default.",
          "example": "123456",
          "member": "uint64",
          "name": "TargetUin",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DeleteAccessKeyResponse": {
      "document": "DeleteAccessKey response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteGroupRequest": {
      "document": "DeleteGroup request structure.",
      "members": [
        {
          "document": "User Group ID",
          "member": "uint64",
          "name": "GroupId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DeleteGroupResponse": {
      "document": "DeleteGroup response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteOIDCConfigRequest": {
      "document": "DeleteOIDCConfig request structure.",
      "members": [
        {
          "document": "OIDC IdP name.",
          "example": "name",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteOIDCConfigResponse": {
      "document": "DeleteOIDCConfig response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeletePolicyRequest": {
      "document": "DeletePolicy request structure.",
      "members": [
        {
          "document": "Array. Array elements are policy IDs. Policies can be deleted in a batch",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "DeletePolicyResponse": {
      "document": "DeletePolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeletePolicyVersionRequest": {
      "document": "DeletePolicyVersion request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Policy version ID",
          "member": "uint64",
          "name": "VersionId",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "DeletePolicyVersionResponse": {
      "document": "DeletePolicyVersion response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteRolePermissionsBoundaryRequest": {
      "document": "DeleteRolePermissionsBoundary request structure.",
      "members": [
        {
          "document": "Role ID (either it or the role name must be entered)",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name (either it or the role ID must be entered)",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteRolePermissionsBoundaryResponse": {
      "document": "DeleteRolePermissionsBoundary response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteRoleRequest": {
      "document": "DeleteRole request structure.",
      "members": [
        {
          "document": "Role ID, used to specify a role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name, used to specify a role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteRoleResponse": {
      "document": "DeleteRole response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteSAMLProviderRequest": {
      "document": "DeleteSAMLProvider request structure.",
      "members": [
        {
          "document": "SAML identity provider name",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteSAMLProviderResponse": {
      "document": "DeleteSAMLProvider response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteServiceLinkedRoleRequest": {
      "document": "DeleteServiceLinkedRole request structure.",
      "members": [
        {
          "document": "Name of the service-linked role to be deleted.",
          "member": "string",
          "name": "RoleName",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteServiceLinkedRoleResponse": {
      "document": "DeleteServiceLinkedRole response structure.",
      "members": [
        {
          "document": "Deletion task identifier, which can be used to check the status of a service-linked role deletion.",
          "member": "string",
          "name": "DeletionTaskId",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteUserPermissionsBoundaryRequest": {
      "document": "DeleteUserPermissionsBoundary request structure.",
      "members": [
        {
          "document": "Sub-account `Uin`",
          "member": "int64",
          "name": "TargetUin",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DeleteUserPermissionsBoundaryResponse": {
      "document": "DeleteUserPermissionsBoundary response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteUserRequest": {
      "document": "DeleteUser request structure.",
      "members": [
        {
          "document": "Sub-user username",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "document": "Whether to forcibly delete the sub-user. The default input parameter is `0`. `0`: do not delete the user if the user has undeleted API keys; `1`: first delete the API keys then delete the user if the user has undeleted API keys. To delete API keys, you need to have cam:DeleteApiKey permission, which enables you to delete both enabled and disabled API keys. If you do not have this permission, you will not be able to delete API keys and the user.",
          "member": "uint64",
          "name": "Force",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DeleteUserResponse": {
      "document": "DeleteUser response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeOIDCConfigRequest": {
      "document": "DescribeOIDCConfig request structure.",
      "members": [
        {
          "document": "Name.",
          "example": "OIDC",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeOIDCConfigResponse": {
      "document": "DescribeOIDCConfig response structure.",
      "members": [
        {
          "document": "IdP type. 11: Role IdP.",
          "example": "11",
          "member": "uint64",
          "name": "ProviderType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "IdP URL.",
          "example": "11",
          "member": "string",
          "name": "IdentityUrl",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Public key for signature.",
          "example": "无",
          "member": "string",
          "name": "IdentityKey",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Client ID.",
          "example": "无",
          "member": "string",
          "name": "ClientId",
          "required": true,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "Status. 0: Not set; 2: Disabled; 11: Enabled.",
          "example": "1",
          "member": "uint64",
          "name": "Status",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Description.",
          "example": "desc",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Name.",
          "example": "OIDC",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeRoleListRequest": {
      "document": "DescribeRoleList request structure.",
      "members": [
        {
          "document": "Page number, beginning from 1",
          "example": "1",
          "member": "uint64",
          "name": "Page",
          "required": true,
          "type": "int"
        },
        {
          "document": "Number of lines per page, no greater than 200",
          "example": "5",
          "member": "uint64",
          "name": "Rp",
          "required": true,
          "type": "int"
        },
        {
          "document": "A parameter used to filter the list of roles under a tag.",
          "example": "无",
          "member": "RoleTags",
          "name": "Tags",
          "required": false,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "DescribeRoleListResponse": {
      "document": "DescribeRoleList response structure.",
      "members": [
        {
          "document": "Role details list\nNote: This field may return null, indicating that no valid value was found.",
          "member": "RoleInfo",
          "name": "List",
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "Total number of roles",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeSafeAuthFlagCollRequest": {
      "document": "DescribeSafeAuthFlagColl request structure.",
      "members": [
        {
          "document": "Sub-account",
          "member": "uint64",
          "name": "SubUin",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DescribeSafeAuthFlagCollResponse": {
      "document": "DescribeSafeAuthFlagColl response structure.",
      "members": [
        {
          "document": "Login protection settings",
          "member": "LoginActionFlag",
          "name": "LoginFlag",
          "type": "object",
          "value_allowed_null": false
        },
        {
          "document": "Sensitive operation protection settings",
          "member": "LoginActionFlag",
          "name": "ActionFlag",
          "type": "object",
          "value_allowed_null": false
        },
        {
          "document": "Suspicious login location protection settings",
          "member": "OffsiteFlag",
          "name": "OffsiteFlag",
          "type": "object",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeSafeAuthFlagIntlRequest": {
      "document": "DescribeSafeAuthFlagIntl request structure.",
      "members": [],
      "type": "object"
    },
    "DescribeSafeAuthFlagIntlResponse": {
      "document": "DescribeSafeAuthFlagIntl response structure.",
      "members": [
        {
          "document": "Login protection settings",
          "example": "无",
          "member": "LoginActionFlagIntl",
          "name": "LoginFlag",
          "required": true,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "document": "Sensitive operation protection settings",
          "example": "无",
          "member": "LoginActionFlagIntl",
          "name": "ActionFlag",
          "required": true,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "document": "Suspicious login location protection settings",
          "example": "无",
          "member": "OffsiteFlag",
          "name": "OffsiteFlag",
          "required": true,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeSubAccountsRequest": {
      "document": "DescribeSubAccounts request structure.",
      "members": [
        {
          "document": "List of sub-user UINs. Up to 50 UINs are supported.",
          "example": "[12,23,34]",
          "member": "uint64",
          "name": "FilterSubAccountUin",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "DescribeSubAccountsResponse": {
      "document": "DescribeSubAccounts response structure.",
      "members": [
        {
          "document": "Sub-user list",
          "example": "[]",
          "member": "SubAccountUser",
          "name": "SubAccounts",
          "required": true,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeUserOIDCConfigRequest": {
      "document": "DescribeUserOIDCConfig request structure.",
      "members": [],
      "type": "object"
    },
    "DescribeUserOIDCConfigResponse": {
      "document": "DescribeUserOIDCConfig response structure.",
      "members": [
        {
          "document": "IdP type. 12: user OIDC IdP",
          "example": "11",
          "member": "uint64",
          "name": "ProviderType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "IdP URL",
          "example": "11",
          "member": "string",
          "name": "IdentityUrl",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Signature public key",
          "example": "无",
          "member": "string",
          "name": "IdentityKey",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Client ID",
          "example": "无",
          "member": "string",
          "name": "ClientId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Status. 0: not set; 2: disabled; 11: enabled.",
          "example": "1",
          "member": "uint64",
          "name": "Status",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Authorization endpoint",
          "example": "无",
          "member": "string",
          "name": "AuthorizationEndpoint",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Authorization scope",
          "example": "无",
          "member": "string",
          "name": "Scope",
          "required": true,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "Authorization response type",
          "example": "无",
          "member": "string",
          "name": "ResponseType",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Authorization response mode",
          "example": "无",
          "member": "string",
          "name": "ResponseMode",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Mapping field name",
          "example": "无",
          "member": "string",
          "name": "MappingFiled",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Description",
          "example": "无",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeUserSAMLConfigRequest": {
      "document": "DescribeUserSAMLConfig request structure.",
      "members": [],
      "type": "object"
    },
    "DescribeUserSAMLConfigResponse": {
      "document": "DescribeUserSAMLConfig response structure.",
      "members": [
        {
          "document": "SAML metadata document.",
          "example": "metadataDocumentDemo",
          "member": "string",
          "name": "SAMLMetadata",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Status. `0`: not set, `1`: enabled, `2`: disabled.",
          "example": "11",
          "member": "uint64",
          "name": "Status",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DetachGroupPolicyRequest": {
      "document": "DetachGroupPolicy request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "User Group ID",
          "member": "uint64",
          "name": "DetachGroupId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DetachGroupPolicyResponse": {
      "document": "DetachGroupPolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DetachRolePolicyRequest": {
      "document": "DetachRolePolicy request structure.",
      "members": [
        {
          "document": "Policy ID. Either `PolicyId` or `PolicyName` must be entered",
          "example": "1",
          "member": "uint64",
          "name": "PolicyId",
          "required": false,
          "type": "int"
        },
        {
          "document": "Role ID, which is used to specify a role. The input parameter is either `DetachRoleId` or `DetachRoleName`.",
          "example": "4611686018427397905",
          "member": "string",
          "name": "DetachRoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name, which is used to specify a role. The input parameter is either `DetachRoleId` or `DetachRoleName`.",
          "example": "QCS_RoleName",
          "member": "string",
          "name": "DetachRoleName",
          "required": false,
          "type": "string"
        },
        {
          "document": "Policy name. Either `PolicyId` or `PolicyName` must be entered",
          "example": "QCS_PolicyName",
          "member": "string",
          "name": "PolicyName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DetachRolePolicyResponse": {
      "document": "DetachRolePolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DetachUserPolicyRequest": {
      "document": "DetachUserPolicy request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Sub-account UIN",
          "member": "uint64",
          "name": "DetachUin",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DetachUserPolicyResponse": {
      "document": "DetachUserPolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DisableUserSSORequest": {
      "document": "DisableUserSSO request structure.",
      "members": [],
      "type": "object"
    },
    "DisableUserSSOResponse": {
      "document": "DisableUserSSO response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetAccountSummaryRequest": {
      "document": "GetAccountSummary request structure.",
      "members": [],
      "type": "object"
    },
    "GetAccountSummaryResponse": {
      "document": "GetAccountSummary response structure.",
      "members": [
        {
          "document": "Number of policies",
          "example": "1",
          "member": "uint64",
          "name": "Policies",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Number of roles",
          "example": "1",
          "member": "uint64",
          "name": "Roles",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Number of identity providers",
          "example": "1",
          "member": "uint64",
          "name": "Idps",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Number of sub-accounts",
          "example": "1",
          "member": "uint64",
          "name": "User",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Number of groups",
          "example": "1",
          "member": "uint64",
          "name": "Group",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Total number of grouped users",
          "example": "1",
          "member": "uint64",
          "name": "Member",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetCustomMFATokenInfoRequest": {
      "document": "GetCustomMFATokenInfo request structure.",
      "members": [
        {
          "document": "Custom multi-factor verification Token",
          "member": "string",
          "name": "MFAToken",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetCustomMFATokenInfoResponse": {
      "document": "GetCustomMFATokenInfo response structure.",
      "members": [
        {
          "document": "Account ID corresponding to the custom multi-factor verification Token",
          "member": "uint64",
          "name": "Uin",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetGroupRequest": {
      "document": "GetGroup request structure.",
      "members": [
        {
          "document": "User Group ID",
          "member": "uint64",
          "name": "GroupId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "GetGroupResponse": {
      "document": "GetGroup response structure.",
      "members": [
        {
          "document": "User Group ID",
          "member": "uint64",
          "name": "GroupId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "User Group name",
          "member": "string",
          "name": "GroupName",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Number of members in the User Group",
          "member": "uint64",
          "name": "GroupNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "User Group description",
          "member": "string",
          "name": "Remark",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time User Group created",
          "member": "string",
          "name": "CreateTime",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "User Group member information",
          "member": "GroupMemberInfo",
          "name": "UserInfo",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetPolicyRequest": {
      "document": "GetPolicy request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "GetPolicyResponse": {
      "document": "GetPolicy response structure.",
      "members": [
        {
          "document": "Policy name\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "PolicyName",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Policy description\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "Description",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "1: Custom policy; 2: Preset policy\nNote: This field may return null, indicating that no valid value was found.",
          "member": "uint64",
          "name": "Type",
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Time created\nNote: This field may return null, indicating that no valid value was found.",
          "member": "datetime",
          "name": "AddTime",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Time of latest update\nNote: This field may return null, indicating that no valid value was found.",
          "member": "datetime",
          "name": "UpdateTime",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Policy document\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "PolicyDocument",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Remarks\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "PresetAlias",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Whether it is a service-linked policy\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "IsServiceLinkedRolePolicy",
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetPolicyVersionRequest": {
      "document": "GetPolicyVersion request structure.",
      "members": [
        {
          "document": "Policy ID",
          "example": "17698703",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Policy version, which can be obtained through `ListPolicyVersions`.",
          "example": "2",
          "member": "uint64",
          "name": "VersionId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "GetPolicyVersionResponse": {
      "document": "GetPolicyVersion response structure.",
      "members": [
        {
          "document": "Policy version details\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "PolicyVersionDetail",
          "name": "PolicyVersion",
          "type": "object",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetRoleRequest": {
      "document": "GetRole request structure.",
      "members": [
        {
          "document": "Role ID, used to specify role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name, used to specify role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetRoleResponse": {
      "document": "GetRole response structure.",
      "members": [
        {
          "document": "Role details",
          "member": "RoleInfo",
          "name": "RoleInfo",
          "type": "object",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetSAMLProviderRequest": {
      "document": "GetSAMLProvider request structure.",
      "members": [
        {
          "document": "SAML identity provider name",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetSAMLProviderResponse": {
      "document": "GetSAMLProvider response structure.",
      "members": [
        {
          "document": "SAML identity provider name",
          "member": "string",
          "name": "Name",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "SAML identity provider description",
          "member": "string",
          "name": "Description",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time SAML identity provider created",
          "member": "datetime",
          "name": "CreateTime",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time SAML identity provider last modified",
          "member": "datetime",
          "name": "ModifyTime",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "SAML identity provider metadata document",
          "member": "string",
          "name": "SAMLMetadata",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetSecurityLastUsedRequest": {
      "document": "GetSecurityLastUsed request structure.",
      "members": [
        {
          "document": "Key ID list query. Up to 10 key IDs can be queried.",
          "example": "[\"id1\",\"id2\"]",
          "member": "string",
          "name": "SecretIdList",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "GetSecurityLastUsedResponse": {
      "document": "GetSecurityLastUsed response structure.",
      "members": [
        {
          "document": "List of key ID’s recent usage records.",
          "example": "无",
          "member": "SecretIdLastUsed",
          "name": "SecretIdLastUsedRows",
          "required": true,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetServiceLinkedRoleDeletionStatusRequest": {
      "document": "GetServiceLinkedRoleDeletionStatus request structure.",
      "members": [
        {
          "document": "Deletion task ID",
          "member": "string",
          "name": "DeletionTaskId",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetServiceLinkedRoleDeletionStatusResponse": {
      "document": "GetServiceLinkedRoleDeletionStatus response structure.",
      "members": [
        {
          "document": "Status: NOT_STARTED, IN_PROGRESS, SUCCEEDED, FAILED",
          "member": "string",
          "name": "Status",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Reasons why the deletion failed.",
          "member": "string",
          "name": "Reason",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Service type\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "ServiceType",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Service name\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "ServiceName",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetUserAppIdRequest": {
      "document": "GetUserAppId request structure.",
      "members": [],
      "type": "object"
    },
    "GetUserAppIdResponse": {
      "document": "GetUserAppId response structure.",
      "members": [
        {
          "document": "UIN of the current account.",
          "member": "string",
          "name": "Uin",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "OwnerUin of the current account.",
          "member": "string",
          "name": "OwnerUin",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "AppId of the current account.",
          "member": "uint64",
          "name": "AppId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetUserRequest": {
      "document": "GetUser request structure.",
      "members": [
        {
          "document": "Sub-user username",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetUserResponse": {
      "document": "GetUser response structure.",
      "members": [
        {
          "document": "Sub-user UIN",
          "example": "100000546533",
          "member": "uint64",
          "name": "Uin",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user username",
          "example": "test124",
          "member": "string",
          "name": "Name",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user UID",
          "example": "1001774",
          "member": "uint64",
          "name": "Uid",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user remarks\nNote: This field may return `null`, indicating that no valid values can be obtained.",
          "example": "test",
          "member": "string",
          "name": "Remark",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Whether the sub-user can log in to the console. `0`: No; `1`: Yes.",
          "example": "1",
          "member": "uint64",
          "name": "ConsoleLogin",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Mobile number",
          "example": "10086",
          "member": "string",
          "name": "PhoneNum",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Country/Area code",
          "example": "86",
          "member": "string",
          "name": "CountryCode",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Email",
          "example": "123@qq.com",
          "member": "string",
          "name": "Email",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Last login IP\nNote: This field may return null, indicating that no valid values can be obtained.",
          "example": "1.1.1.1",
          "member": "string",
          "name": "RecentlyLoginIP",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Last login time\nNote: This field may return null, indicating that no valid values can be obtained.",
          "example": "2023-02-27 14:59:08",
          "member": "string",
          "name": "RecentlyLoginTime",
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GroupIdOfUidInfo": {
      "document": "Information on the association between a sub-user and a User Group",
      "members": [
        {
          "document": "User Group ID",
          "example": "123456",
          "member": "uint64",
          "name": "GroupId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user UID",
          "example": "123456",
          "member": "uint64",
          "name": "Uid",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user UIN. For UIN and UID, at least one of them is required.",
          "example": "100003435",
          "member": "uint64",
          "name": "Uin",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "GroupInfo": {
      "document": "User Group information",
      "members": [
        {
          "document": "User group ID",
          "member": "uint64",
          "name": "GroupId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "User Group name",
          "member": "string",
          "name": "GroupName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time User Group created",
          "member": "string",
          "name": "CreateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "User Group description",
          "member": "string",
          "name": "Remark",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "GroupMemberInfo": {
      "document": "User Group user information",
      "members": [
        {
          "document": "Sub-user UID",
          "example": "100000001",
          "member": "uint64",
          "name": "Uid",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user UIN",
          "example": "100000001",
          "member": "uint64",
          "name": "Uin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user name",
          "example": "userName",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Mobile number",
          "example": "13600000001",
          "member": "string",
          "name": "PhoneNum",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Mobile number country/area code",
          "example": "86",
          "member": "string",
          "name": "CountryCode",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Whether the mobile phone has been verified. `0`: No; `1`: Yes.",
          "example": "0",
          "member": "uint64",
          "name": "PhoneFlag",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Email address",
          "example": "email@qq.com",
          "member": "string",
          "name": "Email",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Whether the email has been verified. `0`: No; `1`: Yes.",
          "example": "1",
          "member": "uint64",
          "name": "EmailFlag",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "User type. `1`: Global collaborator; `2`: Project collaborator; `3`: Message recipient.",
          "example": "1",
          "member": "uint64",
          "name": "UserType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Time policy created",
          "example": "2021-11-11 19:38:01",
          "member": "string",
          "name": "CreateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Whether the user is the primary message recipient. `0`: No; `1`: Yes.",
          "example": "1",
          "member": "uint64",
          "name": "IsReceiverOwner",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "ListAccessKeysRequest": {
      "document": "ListAccessKeys request structure.",
      "members": [
        {
          "document": "`UIN` of the specified user. If this parameter is left empty, access keys of the current user will be listed by default",
          "member": "uint64",
          "name": "TargetUin",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListAccessKeysResponse": {
      "document": "ListAccessKeys response structure.",
      "members": [
        {
          "document": "Access key list\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "AccessKey",
          "name": "AccessKeys",
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListAttachedGroupPoliciesRequest": {
      "document": "ListAttachedGroupPolicies request structure.",
      "members": [
        {
          "document": "User group ID",
          "example": "3349",
          "member": "uint64",
          "name": "TargetGroupId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Page number, which starts from 1. Default is 1",
          "example": "1",
          "member": "uint64",
          "name": "Page",
          "required": false,
          "type": "int"
        },
        {
          "document": "Number of entries per page; 20 by default",
          "example": "10",
          "member": "uint64",
          "name": "Rp",
          "required": false,
          "type": "int"
        },
        {
          "document": "Search by keyword",
          "example": "searchKey",
          "member": "string",
          "name": "Keyword",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListAttachedGroupPoliciesResponse": {
      "document": "ListAttachedGroupPolicies response structure.",
      "members": [
        {
          "document": "Total number of policies",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy list",
          "member": "AttachPolicyInfo",
          "name": "List",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListAttachedRolePoliciesRequest": {
      "document": "ListAttachedRolePolicies request structure.",
      "members": [
        {
          "document": "Page number, beginning from 1",
          "example": "1",
          "member": "uint64",
          "name": "Page",
          "required": true,
          "type": "int"
        },
        {
          "document": "Number of lines per page, no more than 200",
          "example": "10",
          "member": "uint64",
          "name": "Rp",
          "required": true,
          "type": "int"
        },
        {
          "document": "Role ID, used to specify a role. Input either `RoleId` or `RoleName`",
          "example": "4611686018427397905",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name, used to specify a role. Input either `RoleId` or `RoleName`",
          "example": "role_data",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        },
        {
          "document": "Filter according to policy type. `User` indicates querying custom policies only. `QCS` indicates querying preset policies only",
          "example": "1",
          "member": "string",
          "name": "PolicyType",
          "required": false,
          "type": "string"
        },
        {
          "document": "Search by keyword",
          "example": "searchKey",
          "member": "string",
          "name": "Keyword",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListAttachedRolePoliciesResponse": {
      "document": "ListAttachedRolePolicies response structure.",
      "members": [
        {
          "document": "List of policies associated with the role",
          "member": "AttachedPolicyOfRole",
          "name": "List",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "Total number of policies associated with the role",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListAttachedUserAllPoliciesRequest": {
      "document": "ListAttachedUserAllPolicies request structure.",
      "members": [
        {
          "document": "Target user ID.",
          "example": "1234565",
          "member": "uint64",
          "name": "TargetUin",
          "required": true,
          "type": "int"
        },
        {
          "document": "The number of policies displayed on each page. Value range: 1-200.",
          "example": "1",
          "member": "uint64",
          "name": "Rp",
          "required": true,
          "type": "int"
        },
        {
          "document": "Page number. Value range: 1-200.",
          "example": "10",
          "member": "uint64",
          "name": "Page",
          "required": true,
          "type": "int"
        },
        {
          "document": "`0`: return policies that are directly associated and inherited from the user group; `1`: return policies that are directly associated; `2`: return policies inherited from the user group.",
          "example": "1",
          "member": "uint64",
          "name": "AttachType",
          "required": true,
          "type": "int"
        },
        {
          "document": "Policy type.",
          "example": "1",
          "member": "uint64",
          "name": "StrategyType",
          "required": false,
          "type": "int"
        },
        {
          "document": "Keyword for searching.",
          "example": "searchKey",
          "member": "string",
          "name": "Keyword",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListAttachedUserAllPoliciesResponse": {
      "document": "ListAttachedUserAllPolicies response structure.",
      "members": [
        {
          "document": "Policy list.",
          "example": "无",
          "member": "AttachedUserPolicy",
          "name": "PolicyList",
          "required": true,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "Total number of policies.",
          "example": "11",
          "member": "uint64",
          "name": "TotalNum",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListAttachedUserPoliciesRequest": {
      "document": "ListAttachedUserPolicies request structure.",
      "members": [
        {
          "document": "Sub-account UIN",
          "member": "uint64",
          "name": "TargetUin",
          "required": true,
          "type": "int"
        },
        {
          "document": "Page number, which starts from 1. Default is 1",
          "member": "uint64",
          "name": "Page",
          "required": false,
          "type": "int"
        },
        {
          "document": "Number of entries per page; 20 by default",
          "member": "uint64",
          "name": "Rp",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListAttachedUserPoliciesResponse": {
      "document": "ListAttachedUserPolicies response structure.",
      "members": [
        {
          "document": "Total number of policies",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy list",
          "member": "AttachPolicyInfo",
          "name": "List",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListCollaboratorsRequest": {
      "document": "ListCollaborators request structure.",
      "members": [
        {
          "document": "Number of entries per page. Default value: 20",
          "member": "uint64",
          "name": "Limit",
          "required": false,
          "type": "int"
        },
        {
          "document": "Pagination start value. Default value: 0",
          "member": "uint64",
          "name": "Offset",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListCollaboratorsResponse": {
      "document": "ListCollaborators response structure.",
      "members": [
        {
          "document": "Total number",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Collaborator information",
          "member": "SubAccountInfo",
          "name": "Data",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListEntitiesForPolicyRequest": {
      "document": "ListEntitiesForPolicy request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Page number, which starts from 1. Default is 1",
          "member": "uint64",
          "name": "Page",
          "required": false,
          "type": "int"
        },
        {
          "document": "Number of entries per page; 20 by default",
          "member": "uint64",
          "name": "Rp",
          "required": false,
          "type": "int"
        },
        {
          "document": "Valid values: `All`, `User`, `Group`, and `Role`. `All` means all entity types will be returned; `User` means only sub-accounts will be returned; `Group` means only User Groups will be returned; `Role` means only roles will be returned. `All` is the default value.",
          "member": "string",
          "name": "EntityFilter",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListEntitiesForPolicyResponse": {
      "document": "ListEntitiesForPolicy response structure.",
      "members": [
        {
          "document": "Number of entities\nNote: This field may return null, indicating that no valid value was found.",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Entity list\nNote: This field may return null, indicating that no valid value was found.",
          "member": "AttachEntityOfPolicy",
          "name": "List",
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListGroupsForUserRequest": {
      "document": "ListGroupsForUser request structure.",
      "members": [
        {
          "document": "Sub-user UID",
          "member": "uint64",
          "name": "Uid",
          "required": false,
          "type": "int"
        },
        {
          "document": "Number of entries per page; default is 20",
          "member": "uint64",
          "name": "Rp",
          "required": false,
          "type": "int"
        },
        {
          "document": "Page number; default is 1",
          "member": "uint64",
          "name": "Page",
          "required": false,
          "type": "int"
        },
        {
          "document": "Sub-account UIN",
          "member": "uint64",
          "name": "SubUin",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListGroupsForUserResponse": {
      "document": "ListGroupsForUser response structure.",
      "members": [
        {
          "document": "Total number of User Groups to which the sub-user has been added",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "User Group information",
          "member": "GroupInfo",
          "name": "GroupInfo",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListGroupsRequest": {
      "document": "ListGroups request structure.",
      "members": [
        {
          "document": "Page number; default is 1",
          "member": "uint64",
          "name": "Page",
          "required": false,
          "type": "int"
        },
        {
          "document": "Number of entries per page; default is 20",
          "member": "uint64",
          "name": "Rp",
          "required": false,
          "type": "int"
        },
        {
          "document": "Filter by User Group name",
          "member": "string",
          "name": "Keyword",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListGroupsResponse": {
      "document": "ListGroups response structure.",
      "members": [
        {
          "document": "Total number of User Groups",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "User group information array",
          "member": "GroupInfo",
          "name": "GroupInfo",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListPoliciesRequest": {
      "document": "ListPolicies request structure.",
      "members": [
        {
          "document": "Number of entries per page: must be greater than 0 and no greater than 200. Default is 20",
          "member": "uint64",
          "name": "Rp",
          "required": false,
          "type": "int"
        },
        {
          "document": "Page number. Starts from 1 and cannot be greater than 200. Default is 1",
          "member": "uint64",
          "name": "Page",
          "required": false,
          "type": "int"
        },
        {
          "document": "Valid values: `All`, `QCS`, and `Local`. `All` means all policies will be returned; `QCS` means only preset policies will be returned; `Local` means only custom policies will be returned. `All` is the default value",
          "member": "string",
          "name": "Scope",
          "required": false,
          "type": "string"
        },
        {
          "document": "Filter by policy name",
          "member": "string",
          "name": "Keyword",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListPoliciesResponse": {
      "document": "ListPolicies response structure.",
      "members": [
        {
          "document": "Total number of policies",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy array. Each array contains fields including `policyId`, `policyName`, `addTime`, `type`, `description`, and `createMode`. \npolicyId: policy ID \npolicyName: policy name\naddTime: policy creation time\ntype: 1: custom policy, 2: preset policy \ndescription: policy description \ncreateMode: 1 indicates a policy created based on business permissions, while other values indicate that the policy syntax can be viewed and the policy can be updated using the policy syntax\nAttachments: number of associated users\nServiceType: the product the policy is associated with\nIsAttached: this value should not be null when querying if a marked entity has been associated with a policy. 0 indicates that no policy has been associated, and 1 indicates that a policy has been associated",
          "member": "StrategyInfo",
          "name": "List",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "Reserved field\nNote: This field may return null, indicating that no valid value was found.",
          "member": "string",
          "name": "ServiceTypeList",
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListPolicyVersionsRequest": {
      "document": "ListPolicyVersions request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListPolicyVersionsResponse": {
      "document": "ListPolicyVersions response structure.",
      "members": [
        {
          "document": "Policy version list\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "PolicyVersionItem",
          "name": "Versions",
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListSAMLProvidersRequest": {
      "document": "ListSAMLProviders request structure.",
      "members": [],
      "type": "object"
    },
    "ListSAMLProvidersResponse": {
      "document": "ListSAMLProviders response structure.",
      "members": [
        {
          "document": "Total number of SAML identity providers",
          "member": "int64",
          "name": "TotalCount",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "List of SAML identity providers",
          "member": "SAMLProviderInfo",
          "name": "SAMLProviderSet",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListUsersForGroupRequest": {
      "document": "ListUsersForGroup request structure.",
      "members": [
        {
          "document": "User group ID",
          "member": "uint64",
          "name": "GroupId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Page number; default is 1",
          "member": "uint64",
          "name": "Page",
          "required": false,
          "type": "int"
        },
        {
          "document": "Number of entries per page; default is 20",
          "member": "uint64",
          "name": "Rp",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListUsersForGroupResponse": {
      "document": "ListUsersForGroup response structure.",
      "members": [
        {
          "document": "Total number of users associated with the User Group",
          "member": "uint64",
          "name": "TotalNum",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user information",
          "member": "GroupMemberInfo",
          "name": "UserInfo",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListUsersRequest": {
      "document": "ListUsers request structure.",
      "members": [],
      "type": "object"
    },
    "ListUsersResponse": {
      "document": "ListUsers response structure.",
      "members": [
        {
          "document": "Sub-user information",
          "member": "SubAccountInfo",
          "name": "Data",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "LoginActionFlag": {
      "document": "Login and sensitive operation flag",
      "members": [
        {
          "document": "Phone",
          "member": "uint64",
          "name": "Phone",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Hard token",
          "member": "uint64",
          "name": "Token",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Soft token",
          "member": "uint64",
          "name": "Stoken",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "WeChat",
          "member": "uint64",
          "name": "Wechat",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Custom",
          "member": "uint64",
          "name": "Custom",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "both"
    },
    "LoginActionFlagIntl": {
      "document": "Login and sensitive operation flag",
      "members": [
        {
          "document": "Mobile number",
          "example": "0",
          "member": "uint64",
          "name": "Phone",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Hard token",
          "example": "0",
          "member": "uint64",
          "name": "Token",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Soft token",
          "example": "0",
          "member": "uint64",
          "name": "Stoken",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "WeChat",
          "example": "0",
          "member": "uint64",
          "name": "Wechat",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Custom",
          "example": "0",
          "member": "uint64",
          "name": "Custom",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Email",
          "example": "0",
          "member": "uint64",
          "name": "Mail",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "both"
    },
    "LoginActionMfaFlag": {
      "document": "Login and sensitive operation flag",
      "members": [
        {
          "document": "Mobile phone",
          "member": "uint64",
          "name": "Phone",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Soft token",
          "member": "uint64",
          "name": "Stoken",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "WeChat",
          "member": "uint64",
          "name": "Wechat",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "both"
    },
    "OffsiteFlag": {
      "document": "Suspicious login location settings",
      "members": [
        {
          "document": "Verification flag",
          "member": "uint64",
          "name": "VerifyFlag",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Phone notification",
          "member": "uint64",
          "name": "NotifyPhone",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Email notification",
          "member": "int64",
          "name": "NotifyEmail",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "WeChat notification",
          "member": "uint64",
          "name": "NotifyWechat",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Alert",
          "member": "uint64",
          "name": "Tips",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "both"
    },
    "PolicyVersionDetail": {
      "document": "Policy version details",
      "members": [
        {
          "document": "Policy version ID\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "VersionId",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Policy version creation time\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "CreateDate",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Whether it is the operative version. 0: no, 1: yes\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "IsDefaultVersion",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Policy syntax text\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "Document",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "PolicyVersionItem": {
      "document": "Policy version list element structure",
      "members": [
        {
          "document": "Policy version ID\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "VersionId",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Policy version creation time\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "string",
          "name": "CreateDate",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Whether it is the operative version. 0: no, 1: yes\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "int64",
          "name": "IsDefaultVersion",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "PutRolePermissionsBoundaryRequest": {
      "document": "PutRolePermissionsBoundary request structure.",
      "members": [
        {
          "document": "Policy ID",
          "member": "int64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Role ID (either it or the role name must be entered)",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name (either it or the role ID must be entered)",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "PutRolePermissionsBoundaryResponse": {
      "document": "PutRolePermissionsBoundary response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "PutUserPermissionsBoundaryRequest": {
      "document": "PutUserPermissionsBoundary request structure.",
      "members": [
        {
          "document": "Sub-account `Uin`",
          "member": "int64",
          "name": "TargetUin",
          "required": true,
          "type": "int"
        },
        {
          "document": "Policy ID",
          "member": "int64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "PutUserPermissionsBoundaryResponse": {
      "document": "PutUserPermissionsBoundary response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "RemoveUserFromGroupRequest": {
      "document": "RemoveUserFromGroup request structure.",
      "members": [
        {
          "document": "The user’s UIN/UID to be deleted and the array corresponding to the user group ID.",
          "example": "无",
          "member": "GroupIdOfUidInfo",
          "name": "Info",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "RemoveUserFromGroupResponse": {
      "document": "RemoveUserFromGroup response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "RoleInfo": {
      "document": "Role details",
      "members": [
        {
          "document": "Role ID",
          "example": "12",
          "member": "string",
          "name": "RoleId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Role name",
          "example": "testRoleName",
          "member": "string",
          "name": "RoleName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Role policy document",
          "example": "无",
          "member": "string",
          "name": "PolicyDocument",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Role description",
          "example": "Description",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time role created",
          "example": "2020-01-01 01:01:01",
          "member": "string",
          "name": "AddTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time role last updated",
          "example": "2020-01-01 01:01:01",
          "member": "string",
          "name": "UpdateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "If login is allowed for the role",
          "example": "1",
          "member": "uint64",
          "name": "ConsoleLogin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "User role. Valid values: `user`, `system`, `service_linked`\nNote: this field may return null, indicating that no valid values can be obtained.",
          "example": "user",
          "member": "string",
          "name": "RoleType",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Valid period\nNote: this field may return null, indicating that no valid values can be obtained.",
          "example": "7200",
          "member": "uint64",
          "name": "SessionDuration",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Task identifier for deleting a service-linked role \nNote: this field may return null, indicating that no valid values can be obtained.",
          "example": "1",
          "member": "string",
          "name": "DeletionTaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Tags.\nNote: This field may return `null`, indicating that no valid values can be obtained.",
          "example": "无",
          "member": "RoleTags",
          "name": "Tags",
          "required": true,
          "type": "list",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "RoleTags": {
      "document": "Role tag type",
      "members": [
        {
          "document": "Tag key.",
          "example": "TagKey",
          "member": "string",
          "name": "Key",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Tag value.",
          "example": "TagValue",
          "member": "string",
          "name": "Value",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "both"
    },
    "SAMLProviderInfo": {
      "document": "SAML identity provider",
      "members": [
        {
          "document": "SAML identity provider name",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "SAML identity provider description",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time SAML identity provider created",
          "member": "string",
          "name": "CreateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time SAML identity provider last modified",
          "member": "string",
          "name": "ModifyTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "both"
    },
    "SecretIdLastUsed": {
      "document": "The last time the key was used.",
      "members": [
        {
          "document": "Key ID.",
          "example": "Key",
          "member": "string",
          "name": "SecretId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The date when the key ID was last used (the value is obtained one day later).\nNote: this field may return `null`, indicating that no valid value can be obtained.",
          "example": "2021-03-20",
          "member": "date",
          "name": "LastUsedDate",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "The most recent date the key was accessed\nNote: This field may return null, indicating that no valid values can be obtained.",
          "example": "1671435009849",
          "member": "uint64",
          "name": "LastSecretUsedDate",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "SetDefaultPolicyVersionRequest": {
      "document": "SetDefaultPolicyVersion request structure.",
      "members": [
        {
          "document": "Policy ID",
          "example": "17698703",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int"
        },
        {
          "document": "Policy version, which can be obtained through `ListPolicyVersions`.",
          "example": "1",
          "member": "uint64",
          "name": "VersionId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "SetDefaultPolicyVersionResponse": {
      "document": "SetDefaultPolicyVersion response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "SetMfaFlagRequest": {
      "document": "SetMfaFlag request structure.",
      "members": [
        {
          "document": "Sets user UIN",
          "member": "uint64",
          "name": "OpUin",
          "required": false,
          "type": "int"
        },
        {
          "document": "Sets login protection",
          "member": "LoginActionMfaFlag",
          "name": "LoginFlag",
          "required": false,
          "type": "object"
        },
        {
          "document": "Sets operation protection",
          "member": "LoginActionMfaFlag",
          "name": "ActionFlag",
          "required": false,
          "type": "object"
        }
      ],
      "type": "object"
    },
    "SetMfaFlagResponse": {
      "document": "SetMfaFlag response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "StrategyInfo": {
      "document": "Policy information",
      "members": [
        {
          "document": "Policy ID",
          "example": "1",
          "member": "uint64",
          "name": "PolicyId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy name",
          "example": "AdministratorAccess",
          "member": "string",
          "name": "PolicyName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Time policy created\nNote: This field may return null, indicating that no valid value was found.",
          "example": "2016-06-02 19:40:09",
          "member": "datetime",
          "name": "AddTime",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Policy type. 1: Custom policy; 2: Preset policy",
          "example": "1",
          "member": "uint64",
          "name": "Type",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Policy description\nNote: This field may return null, indicating that no valid value was found.",
          "example": "该策略允许您管理账户内所有用户及其权限、财务相关的信息、云服务资产。",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "How the policy was created: 1: Via console; 2: Via syntax",
          "example": "1",
          "member": "uint64",
          "name": "CreateMode",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Number of associated users",
          "example": "1",
          "member": "uint64",
          "name": "Attachments",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Product associated with the policy\nNote: This field may return null, indicating that no valid value was found.",
          "example": "cam",
          "member": "string",
          "name": "ServiceType",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "This value should not be null when querying whether a marked entity has been associated with a policy. 0 indicates that no policy has been associated, while 1 indicates that a policy has been associated",
          "example": "1",
          "member": "uint64",
          "name": "IsAttached",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "Queries if the policy has been deactivated\nNote: this field may return null, indicating that no valid values can be obtained.",
          "example": "0",
          "member": "uint64",
          "name": "Deactived",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "List of deprecated products\nNote: this field may return null, indicating that no valid values can be obtained.",
          "example": "[]",
          "member": "string",
          "name": "DeactivedDetail",
          "required": true,
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "The deletion task identifier used to check the deletion status of the service-linked role\nNote: this field may return null, indicating that no valid values can be obtained.",
          "example": "0",
          "member": "uint64",
          "name": "IsServiceLinkedPolicy",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "The number of entities associated with the policy.\nNote: this field may return `null`, indicating that no valid values can be obtained.",
          "example": "1",
          "member": "int64",
          "name": "AttachEntityCount",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "The number of entities associated with the permission boundary.\nNote: this field may return `null`, indicating that no valid values can be obtained.",
          "example": "1",
          "member": "int64",
          "name": "AttachEntityBoundaryCount",
          "required": true,
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "The last edited time.\nNote: this field may return `null`, indicating that no valid values can be obtained.",
          "example": "2016-06-02 19:40:09",
          "member": "datetime",
          "name": "UpdateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "SubAccountInfo": {
      "document": "Sub-user information",
      "members": [
        {
          "document": "Sub-user user ID",
          "example": "123xxxxx",
          "member": "uint64",
          "name": "Uin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user username",
          "example": "名称",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user UID",
          "example": "123xxxxx",
          "member": "uint64",
          "name": "Uid",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user remarks",
          "example": "备注",
          "member": "string",
          "name": "Remark",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "If sub-user can log in to the console",
          "example": "1",
          "member": "uint64",
          "name": "ConsoleLogin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Mobile number",
          "example": "151xxxx1001",
          "member": "string",
          "name": "PhoneNum",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Country/Area code",
          "example": "86",
          "member": "string",
          "name": "CountryCode",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Email",
          "example": "123@qq.com",
          "member": "string",
          "name": "Email",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Creation time\nNote: this field may return `null`, indicating that no valid values can be obtained.",
          "example": "2021-12-09 11:39:46",
          "member": "datetime",
          "name": "CreateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "Nickname.\nNote: This field may return `null`, indicating that no valid values can be obtained.",
          "example": "昵称",
          "member": "string",
          "name": "NickName",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "SubAccountUser": {
      "document": "Sub-user information",
      "members": [
        {
          "document": "Sub-user ID",
          "example": "1",
          "member": "uint64",
          "name": "Uin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user name",
          "example": "name",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user UID. UID is the unique identifier of a user who is a message recipient, while UIN is a unique identifier of a user.",
          "example": "1",
          "member": "uint64",
          "name": "Uid",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "Sub-user remarks",
          "example": "remark",
          "member": "string",
          "name": "Remark",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "Creation time\nNote: this field may return null, indicating that no valid values can be obtained.",
          "example": "2020-02-01 08:00:00",
          "member": "datetime",
          "name": "CreateTime",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "document": "User type (1: root account; 2: sub-user; 3: WeCom sub-user; 4: collaborator; 5: message recipient)",
          "example": "2",
          "member": "uint64",
          "name": "UserType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "",
          "example": "127.0.0.1",
          "member": "string",
          "name": "LastLoginIp",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "",
          "example": "2021-03-15 20:00:00",
          "member": "string",
          "name": "LastLoginTime",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        }
      ],
      "usage": "out"
    },
    "TagRoleRequest": {
      "document": "TagRole request structure.",
      "members": [
        {
          "document": "Tag.",
          "example": "无",
          "member": "RoleTags",
          "name": "Tags",
          "required": true,
          "type": "list"
        },
        {
          "document": "Role name. Specify either the role name or role ID.",
          "example": "CAM_QCSRole",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role ID. Specify either the role ID or role name.",
          "example": "46111234567890",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "TagRoleResponse": {
      "document": "TagRole response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UntagRoleRequest": {
      "document": "UntagRole request structure.",
      "members": [
        {
          "document": "Tag key.",
          "example": "[\"AKey\", \"BKey\"]",
          "member": "string",
          "name": "TagKeys",
          "required": true,
          "type": "list"
        },
        {
          "document": "Role name. Specify either the role name or role ID.",
          "example": "CAM_QCSRole",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role ID. Specify either the role ID or role name.",
          "example": "46111234567890",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UntagRoleResponse": {
      "document": "UntagRole response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateAccessKeyRequest": {
      "document": "UpdateAccessKey request structure.",
      "members": [
        {
          "document": "ID of the specified access key that needs to be updated",
          "example": "AKIDtmV4QYS9dx4yhEZllY8VebL2c0Tlqorp",
          "member": "string",
          "name": "AccessKeyId",
          "required": true,
          "type": "string"
        },
        {
          "document": "Key status. Valid values: `Active` (activated), `Inactive` (not activated).",
          "example": "Active",
          "member": "string",
          "name": "Status",
          "required": true,
          "type": "string"
        },
        {
          "document": "UIN of the specified user. If this parameter is left empty, the access key will be updated for the current user by default.",
          "example": "123456",
          "member": "uint64",
          "name": "TargetUin",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "UpdateAccessKeyResponse": {
      "document": "UpdateAccessKey response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateAssumeRolePolicyRequest": {
      "document": "UpdateAssumeRolePolicy request structure.",
      "members": [
        {
          "document": "Policy document",
          "member": "string",
          "name": "PolicyDocument",
          "required": true,
          "type": "string"
        },
        {
          "document": "Role ID, used to specify a role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name, used to specify a role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateAssumeRolePolicyResponse": {
      "document": "UpdateAssumeRolePolicy response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateGroupRequest": {
      "document": "UpdateGroup request structure.",
      "members": [
        {
          "document": "User Group ID",
          "member": "uint64",
          "name": "GroupId",
          "required": true,
          "type": "int"
        },
        {
          "document": "User Group name",
          "member": "string",
          "name": "GroupName",
          "required": false,
          "type": "string"
        },
        {
          "document": "User Group description",
          "member": "string",
          "name": "Remark",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateGroupResponse": {
      "document": "UpdateGroup response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateOIDCConfigRequest": {
      "document": "UpdateOIDCConfig request structure.",
      "members": [
        {
          "document": "IdP URL.",
          "example": "https://xulongliang.authing.cn/oidc",
          "member": "string",
          "name": "IdentityUrl",
          "required": true,
          "type": "string"
        },
        {
          "document": "Public key for signature, which must be Base64-encoded.",
          "example": "无",
          "member": "string",
          "name": "IdentityKey",
          "required": true,
          "type": "string"
        },
        {
          "document": "Client ID.",
          "example": "61adcf00620c31e3ddbc9546",
          "member": "string",
          "name": "ClientId",
          "required": true,
          "type": "list"
        },
        {
          "document": "Name.",
          "example": "OIDC",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "document": "Description.",
          "example": "描述",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateOIDCConfigResponse": {
      "document": "UpdateOIDCConfig response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdatePolicyRequest": {
      "document": "UpdatePolicy request structure.",
      "members": [
        {
          "document": "Policy ID. Either `PolicyId` or `PolicyName` must be entered",
          "member": "uint64",
          "name": "PolicyId",
          "required": false,
          "type": "int"
        },
        {
          "document": "Policy name. Either `PolicyName` or `PolicyId` must be entered",
          "member": "string",
          "name": "PolicyName",
          "required": false,
          "type": "string"
        },
        {
          "document": "Policy description",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        },
        {
          "document": "Policy documentation, for example: `{\"version\":\"2.0\",\"statement\":[{\"action\":\"name/sts:AssumeRole\",\"effect\":\"allow\",\"principal\":{\"service\":[\"cloudaudit.cloud.tencent.com\",\"cls.cloud.tencent.com\"]}}]}`, where `principal` is used to specify the service that is authorized to use the role. For more information about this parameter, see **RoleInfo** under **Output Parameters** in the [GetRole](https://intl.cloud.tencent.com/document/product/598/36221?from_cn_redirect=1).",
          "member": "string",
          "name": "PolicyDocument",
          "required": false,
          "type": "string"
        },
        {
          "document": "Preset policy remark",
          "member": "string",
          "name": "Alias",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdatePolicyResponse": {
      "document": "UpdatePolicy response structure.",
      "members": [
        {
          "document": "Policy ID, which will be returned only if the input parameter is `PolicyName`\nNote: this field may return null, indicating that no valid values can be obtained.",
          "member": "uint64",
          "name": "PolicyId",
          "type": "int",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateRoleConsoleLoginRequest": {
      "document": "UpdateRoleConsoleLogin request structure.",
      "members": [
        {
          "document": "Whether login is allowed. 1: yes, 0: no",
          "example": "1",
          "member": "int64",
          "name": "ConsoleLogin",
          "required": true,
          "type": "int"
        },
        {
          "document": "Role ID. Use either `RoleId` or `RoleName` as the input parameter.",
          "example": "10000000947212312",
          "member": "int64",
          "name": "RoleId",
          "required": false,
          "type": "int"
        },
        {
          "document": "Role name. Use either `RoleId` or `RoleName` as the input parameter.",
          "example": "RoleNameConsole",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateRoleConsoleLoginResponse": {
      "document": "UpdateRoleConsoleLogin response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateRoleDescriptionRequest": {
      "document": "UpdateRoleDescription request structure.",
      "members": [
        {
          "document": "Role description",
          "member": "string",
          "name": "Description",
          "required": true,
          "type": "string"
        },
        {
          "document": "Role ID, used to specify a role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleId",
          "required": false,
          "type": "string"
        },
        {
          "document": "Role name, used to specify a role. Input either `RoleId` or `RoleName`",
          "member": "string",
          "name": "RoleName",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateRoleDescriptionResponse": {
      "document": "UpdateRoleDescription response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateSAMLProviderRequest": {
      "document": "UpdateSAMLProvider request structure.",
      "members": [
        {
          "document": "SAML identity provider name",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "document": "SAML identity provider description",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        },
        {
          "document": "SAML identity provider metadata document (Base64)",
          "member": "string",
          "name": "SAMLMetadataDocument",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateSAMLProviderResponse": {
      "document": "UpdateSAMLProvider response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateUserOIDCConfigRequest": {
      "document": "UpdateUserOIDCConfig request structure.",
      "members": [
        {
          "document": "OpenID Connect IdP URL.\nIt corresponds to the value of the `issuer` field in the `Openid-configuration` provided by the enterprise IdP.",
          "example": "https://xulongliang.authing.cn/oidc",
          "member": "string",
          "name": "IdentityUrl",
          "required": true,
          "type": "string"
        },
        {
          "document": "Signature public key, which is used to verify the OpenID Connect IdP's ID token and must be Base64-encoded. For the security of your account, we recommend you rotate it regularly.",
          "example": "无",
          "member": "string",
          "name": "IdentityKey",
          "required": true,
          "type": "string"
        },
        {
          "document": "Client ID registered with the OpenID Connect IdP.",
          "example": "61adcf00620c31e3ddbc9546",
          "member": "string",
          "name": "ClientId",
          "required": true,
          "type": "string"
        },
        {
          "document": "OpenID Connect IdP authorization endpoint. It corresponds to the value of the `authorization_endpoint` field in the `Openid-configuration` provided by the enterprise IdP.",
          "example": "https://console.authing.cn/console/get-started/61adcf00620c31e3d",
          "member": "string",
          "name": "AuthorizationEndpoint",
          "required": true,
          "type": "string"
        },
        {
          "document": "Authorization response type, which is always `id_token`.",
          "example": "id_token",
          "member": "string",
          "name": "ResponseType",
          "required": true,
          "type": "string"
        },
        {
          "document": "Authorization response mode. Valid values: form_post (recommended); fragment.",
          "example": "fragment",
          "member": "string",
          "name": "ResponseMode",
          "required": true,
          "type": "string"
        },
        {
          "document": "Mapping field name. It indicates which field in the `id_token` of the IdP is mapped to the username of a sub-user. It is usually the `sub` or `name` field",
          "example": "sub",
          "member": "string",
          "name": "MappingFiled",
          "required": true,
          "type": "string"
        },
        {
          "document": "Authorization information scope. Valid values: openid (default); email; profile.",
          "example": "无",
          "member": "string",
          "name": "Scope",
          "required": false,
          "type": "list"
        },
        {
          "document": "Description",
          "example": "描述",
          "member": "string",
          "name": "Description",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateUserOIDCConfigResponse": {
      "document": "UpdateUserOIDCConfig response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateUserRequest": {
      "document": "UpdateUser request structure.",
      "members": [
        {
          "document": "Sub-user username",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "document": "Sub-user remarks",
          "member": "string",
          "name": "Remark",
          "required": false,
          "type": "string"
        },
        {
          "document": "Whether or not the sub-user is allowed to log in to the console. 0: No; 1: Yes.",
          "member": "uint64",
          "name": "ConsoleLogin",
          "required": false,
          "type": "int"
        },
        {
          "document": "Sub-user's console login password. If no password rules have been set, the password must have a minimum of 8 characters containing uppercase letters, lowercase letters, digits, and special characters by default. This parameter will be valid only when the sub-user is allowed to log in to the console. If it is not specified and console login is allowed, the system will automatically generate a random 32-character password that contains uppercase letters, lowercase letters, digits, and special characters.",
          "member": "string",
          "name": "Password",
          "required": false,
          "type": "string"
        },
        {
          "document": "If the sub-user needs to reset their password when they next log in to the console. 0: No; 1: Yes.",
          "member": "uint64",
          "name": "NeedResetPassword",
          "required": false,
          "type": "int"
        },
        {
          "document": "Mobile number",
          "member": "string",
          "name": "PhoneNum",
          "required": false,
          "type": "string"
        },
        {
          "document": "Country/Area Code",
          "member": "string",
          "name": "CountryCode",
          "required": false,
          "type": "string"
        },
        {
          "document": "Email",
          "member": "string",
          "name": "Email",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateUserResponse": {
      "document": "UpdateUser response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateUserSAMLConfigRequest": {
      "document": "UpdateUserSAMLConfig request structure.",
      "members": [
        {
          "document": "Type of the modification operation. `enable`: enable, `disable`: disable, `updateSAML`: modify metadata document.",
          "example": "enable",
          "member": "string",
          "name": "Operate",
          "required": true,
          "type": "string"
        },
        {
          "document": "Metadata document, which must be Base64 encoded. This parameter is required only when the value of `Operate` is `updateSAML`.",
          "example": "metadataDocumentDemo",
          "member": "string",
          "name": "SAMLMetadataDocument",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateUserSAMLConfigResponse": {
      "document": "UpdateUserSAMLConfig response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    }
  },
  "version": "1.0"
}