{
  "actions": {
    "AddUserContact": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=AddUserContact\n&Name=John Smith\n&ContactInfo=test@qq.com\n&Product=mysql\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"Id\": 1,\n        \"RequestId\": \"77db16d7-bbe8-48a7-868b-ed776a96f1ab\"\n    }\n}",
        "title": "Adding email recipients"
      }
    ],
    "CreateDBDiagReportTask": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=CreateDBDiagReportTask\n&InstanceId=test\n&StartTime=2019-01-01T00:00:00+08:00\n&EndTime=2019-01-02T00:00:00+08:00\n&SendMailFlag=1\n&ContactPerson.0=1\n&ContactGroup.0=1\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"AsyncRequestId\": 129632,\n        \"RequestId\": \"77db16d7-bbe8-48a7-868b-ed776a96f1ab\"\n    }\n}",
        "title": "Creating a health report and sending it via email (optional)"
      }
    ],
    "CreateDBDiagReportUrl": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=CreateDBDiagReportUrl\n&Product=mysql\n&InstanceId=cdb-c1nl9rpv\n&AsyncRequestId=63452\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"ReportUrl\": \"https://dbbrain-sh-1256569818.cos.ap-guangzhou.myqcloud.com/report_cdb-c1nl9rpv_10947711_1618851196690.pdf?sign=q-sign-algorithm\",\n        \"ExpireTime\": 1618890295,\n        \"RequestId\": \"24665720-8c93-11eb-bee6-e98cea0e6794\"\n    }\n}",
        "title": "Creating a URL for a health report"
      }
    ],
    "CreateMailProfile": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=CreateMailProfile\n&Product=mysql\n&ProfileLevel=Instance\n&ProfileName=scheduler_cdb-test\n&ProfileType= scheduler_mail_configuration\n&BindInstanceIds.0=cdb-test\n&ProfileInfo.Language=zh\n&ProfileInfo.MailConfiguration.SendMail=1\n&ProfileInfo.MailConfiguration.Region.0=ap-guangzhou\n&ProfileInfo.MailConfiguration.HealthStatus.0=HEALTH\n&ProfileInfo.MailConfiguration.ContactPerson.0=1\n&ProfileInfo.MailConfiguration.ContactGroup.0=1\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"77db16d7-bbe8-48a7-868b-ed776a96f1ab\"\n    }\n}",
        "title": "Creating an email template to send the report generated by the scheduled task/database inspection"
      }
    ],
    "CreateSchedulerMailProfile": [
      {
        "document": "This example shows you how to create the configurations for regularly generating health reports and sending them via email. Pass in the regular generation time of the health reports as a parameter (Monday to Sunday) to set the regular generation time of the health reports, and save the corresponding regular email sending configuration.",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=CreateSchedulerMailProfile\n&WeekConfiguration.0=1\n&Product=mysql\n&ProfileName=scheduler_cdb-test\n&BindInstanceId=cdb-test\n&ProfileInfo.Language=zh\n&ProfileInfo.MailConfiguration.SendMail=1\n&ProfileInfo.MailConfiguration.Region.0=ap-guangzhou\n&ProfileInfo.MailConfiguration.HealthStatus.0=HEALTH\n&ProfileInfo.MailConfiguration.ContactPerson.0=1\n&ProfileInfo.MailConfiguration.ContactGroup.0=1\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"77db16d7-bbe8-48a7-868b-ed776a96f1ab\"\n    }\n}",
        "title": "Creating the regularly generated email sending configuration"
      }
    ],
    "DescribeAllUserContact": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeAllUserContact\n&Product=mysql\n&Names.0=zhangsan\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"TotalCount\": 2,\n        \"Contacts\": [\n            {\n                \"Mail\": \"zhangsan@qq.com\",\n                \"Id\": 1,\n                \"Name\": \"zhangsan\"\n            },\n            {\n                \"Mail\": \"zhangsan2@qq.com\",\n                \"Id\": 2,\n                \"Name\": \"zhangsan2\"\n            }\n        ],\n        \"RequestId\": \"b2d08895-1cfe-48bc-b7f7-87fd7cb5d6f1\"\n    }\n}",
        "title": "Obtaining the information of recipients"
      }
    ],
    "DescribeAllUserGroup": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeAllUserGroup\n&Product=mysql\n&Names.0=group1\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"TotalCount\": 2,\n        \"RequestId\": \"31dd9325-792f-4d76-89ad-ca8902cbe4d9\",\n        \"Groups\": [\n            {\n                \"MemberCount\": 0,\n                \"Id\": 1,\n                \"Name\": \"group1\"\n            },\n            {\n                \"MemberCount\": 2,\n                \"Id\": 2,\n                \"Name\": \"group11\"\n            }\n        ]\n    }\n}",
        "title": "Obtaining the contact group information"
      }
    ],
    "DescribeDBDiagEvent": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeDBDiagEvent\n&InstanceId=test\n&EventId=5\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"Suggestions\": \"[]\",\n        \"DiagType\": \"Database snapshot\",\n        \"EndTime\": \"2019-11-06 12:05:50\",\n        \"RequestId\": \"78cf7bb1-0608-11ea-a9ef-2736f0f7f829\",\n        \"Explanation\": \"[]\",\n        \"StartTime\": \"2019-11-06 12:05:40\",\n        \"Severity\": 4,\n        \"EventId\": 5,\n        \"Outline\": \"1 problem found during database health check\",\n        \"Problem\": \"[{\\\"DataType\\\":\\\"title\\\",\\\"Data\\\":{\\\"Name\\\":\\\"Session snapshot\\\"}},{\\\"DataType\\\":\\\"title\\\",\\\"Data\\\":{\\\"Name\\\":\\\"Transaction snapshot\\\"}},{\\\"DataType\\\":\\\"title\\\",\\\"Data\\\":{\\\"Name\\\":\\\"InnoDB status snapshot\\\"}}]\",\n        \"Metric\": \"\",\n        \"DiagItem\": \"Health inspection\"\n    }\n}",
        "title": "Obtaining diagnosis event details"
      }
    ],
    "DescribeDBDiagHistory": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeDBDiagHistory\n&StartTime=2019-01-01 00:00:00\n&EndTime=2019-01-01 01:00:00\n&InstanceId=cdb-test\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"\",\n        \"Events\": [\n            {\n                \"DiagType\": \"Row lock\",\n                \"StartTime\": \"2019-01-01 00:00:20\",\n                \"EndTime\": \"2019-01-01 00:00:30\",\n                \"InstanceId\": \"cdb-test\",\n                \"Region\": \"ap-beijing\",\n                \"Metric\": \"\",\n                \"EventId\": 5,\n                \"Severity\": 4,\n                \"Outline\": \"Monitoring metric \\\"innodb_row_lock_waits\\\" triggered an alarm. Current value: 131\",\n                \"DiagItem\": \"UPDATE statement row lock wait\"\n            }\n        ]\n    }\n}",
        "title": "Obtaining the instance diagnosis event list"
      }
    ],
    "DescribeDBDiagReportTasks": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeDBDiagReportTasks\n&Product=mysql\n&StartTime=2020-09-21T00:00:00+00:00\n&EndTime=2020-09-22T00:00:00+00:00\n&Sources.0=DAILY_INSPECTION\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"TotalCount\": 1,\n        \"Tasks\": [\n            {\n                \"AsyncRequestId\": 63452,\n                \"Source\": \"DAILY_INSPECTION\",\n                \"Progress\": 100,\n                \"CreateTime\": \"2020-09-21 00:00:00\",\n                \"StartTime\": \"2020-09-21 00:00:00\",\n                \"EndTime\": \"2020-09-21 00:00:00\",\n                \"InstanceInfo\": {\n                    \"InstanceId\": \"cdb-c9orjpes\",\n                    \"InstanceName\": \"dbbrain-test\",\n                    \"EngineVersion\": \"5.7\",\n                    \"Vip\": \"10.207.0.10\",\n                    \"Vport\": 3306,\n                    \"Product\": \"MySQL\"\n                },\n                \"HealthStatus\": {\n                    \"HealthScore\": 100,\n                    \"HealthLevel\": \"HEALTH\",\n                    \"ScoreLost\": 0,\n                    \"ScoreDetails\": []\n                }\n            }\n        ],\n        \"RequestId\": \"24665720-8c93-11eb-bee6-e98cea0e6794\"\n    }\n}",
        "title": "Querying the list of the health report generation tasks"
      }
    ],
    "DescribeDBSpaceStatus": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeDBSpaceStatus\n&InstanceId=cdb-test\n&RangeDays=5\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"Remain\": 23224,\n        \"RequestId\": \"78cf7bb1-0608-11ea-a9ef-2736f0f7f829\",\n        \"Growth\": 231,\n        \"Total\": 50000,\n        \"AvailableDays\": 35\n    }\n}",
        "title": "Getting the overview of instance space usage during a specified time period"
      }
    ],
    "DescribeDiagDBInstances": [
      {
        "document": "This example shows you how to obtain the instance information list. You can query instance related information by instance ID, instance name, and region.",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeDiagDBInstances\n&IsSupported=true\n&Offset=0\n&Limit=50\n&Product=mysql\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"TotalCount\": 2,\n        \"DbScanStatus\": 1,\n        \"Items\": [\n            {\n                \"GroupName\": “4 regions as a group”,\n                \"EventCount\": 0,\n                \"Memory\": 4000,\n                \"Product\": \"MySQL\",\n                \"Cpu\": 2,\n                \"Source\": \"TENCENT_CLOUD\",\n                \"UniqSubnetId\": \"subnet-test\",\n                \"DeployMode\": \"CUSTOM\",\n                \"InstanceType\": 1,\n                \"AuditRunningStatus\": \"normal\",\n                \"Status\": 1,\n                \"EngineVersion\": \"5.6\",\n                \"InstanceId\": \"cdb-test\",\n                \"Vport\": 63492,\n                \"InitFlag\": 1,\n                \"TaskStatus\": 0,\n                \"UniqVpcId\": \"vpc-fstest\",\n                \"GroupId\": \"dg-0ttest\",\n                \"InstanceName\": “long-term monitoring”\n                \"HealthScore\": 100,\n                \"InstanceConf\": {\n                    \"OverviewDisplay\": \"Yes\",\n                    \"DailyInspection\": \"Yes\"\n                },\n                \"AuditPolicyStatus\": \"UNBOUND\",\n                \"Volume\": 100,\n                \"DeadlineTime\": \"2021-02-25 16:33:26\",\n                \"SecAuditStatus\": \"ON\",\n                \"Region\": \"ap-guangzhou\",\n                \"Vip\": \"10.5.0.9\",\n                \"IsSupported\": true\n            }\n        ],\n        \"RequestId\": \"b2d08895-1cfe-48bc-b7f7-87fd7cb5d6f1\"\n    }\n}",
        "title": "Obtaining instance information list"
      }
    ],
    "DescribeHealthScore": [
      {
        "document": "This example shows you how to obtain health score and deduction for exceptions based on instance ID.",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeHealthScore\n&InstanceId=test\n&Time=2019-01-01T00:00:00+08:00\n&Product=mysql\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"8b307450-6118-11eb-88ad-93c053da68c6\",\n        \"Data\": {\n            \"IssueTypes\": [\n                {\n                    \"TotalCount\": 0,\n                    \"Events\": [],\n                    \"IssueType\": \"AVAILABILITY\"\n                },\n                {\n                    \"TotalCount\": 0,\n                    \"Events\": [],\n                    \"IssueType\": \"MAINTAINABILITY\"\n                },\n                {\n                    \"TotalCount\": 1,\n                    \"Events\": [\n                        {\n                            \"DiagType\": “high-concurrency/pressure request”,\n                            \"ScoreLost\": 6,\n                            \"EndTime\": \"2021-01-28 11:20:42\",\n                            \"StartTime\": \"2021-01-28 11:00:00\",\n                            \"EventId\": 780019530,\n                            \"Outline\": \"Monitoring metric \\\"cpu_use_rate\\\" triggered an alarm. Current value: 100\",\n                            \"Severity\": 1,\n                            \"Metric\": \"cpu_use_rate\",\n                            \"Count\": 1\n                        }\n                    ],\n                    \"IssueType\": \"PERFORMANCE\"\n                },\n                {\n                    \"TotalCount\": 3,\n                    \"Events\": [\n                        {\n                            \"DiagType\": “Replicate”,\n                            \"ScoreLost\": 10,\n                            \"EndTime\": \"2021-01-28 11:21:17\",\n                            \"StartTime\": \"2021-01-28 11:20:25\",\n                            \"EventId\": 780018741,\n                            \"Outline\": “I/O replication thread interrupted”,\n                            \"Severity\": 1,\n                            \"Metric\": \"slave_io_running\",\n                            \"Count\": 1\n                        },\n                        {\n                            \"DiagType\": “Replicate”,\n                            \"ScoreLost\": 10,\n                            \"EndTime\": \"2021-01-28 11:09:37\",\n                            \"StartTime\": \"2021-01-28 11:09:32\",\n                            \"EventId\": 779984938,\n                            \"Outline\": “I/O replication thread interrupted”,\n                            \"Severity\": 1,\n                            \"Metric\": \"slave_io_running\",\n                            \"Count\": 1\n                        },\n                        {\n                            \"DiagType\": “Replicate”,\n                            \"ScoreLost\": 8,\n                            \"EndTime\": \"2021-01-28 11:20:00\",\n                            \"StartTime\": \"2021-01-28 11:20:00\",\n                            \"EventId\": 780021648,\n                            \"Outline\": “Replication delayed”,\n                            \"Severity\": 2,\n                            \"Metric\": \"slave_io_running\",\n                            \"Count\": 1\n                        }\n                    ],\n                    \"IssueType\": \"RELIABILITY\"\n                }\n            ],\n            \"EventsTotalCount\": 4,\n            \"HealthLevel\": \"RISK\"\n        }\n    }\n}",
        "title": "Obtaining health score"
      },
      {
        "document": "",
        "input": "POST / HTTP/1.1\nHost: dbbrain.tencentcloudapi.com\nContent-Type: application/json\nX-TC-Action: DescribeHealthScore\n<Common request parameters>\n\n{\n    \"InstanceId\": \"cdb-8jawylhf\",\n    \"Product\": \"mysql\",\n    \"Time\": \"2021-02-01 14:30:00\"\n}",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"0736b315-a9be-4991-92e6-28eccf3d31e3\",\n        \"Data\": {\n            \"IssueTypes\": [\n                {\n                    \"TotalCount\": 0,\n                    \"Events\": [],\n                    \"IssueType\": \"AVAILABILITY\"\n                },\n                {\n                    \"TotalCount\": 0,\n                    \"Events\": [],\n                    \"IssueType\": \"MAINTAINABILITY\"\n                },\n                {\n                    \"TotalCount\": 0,\n                    \"Events\": [],\n                    \"IssueType\": \"PERFORMANCE\"\n                },\n                {\n                    \"TotalCount\": 0,\n                    \"Events\": [],\n                    \"IssueType\": \"RELIABILITY\"\n                }\n            ],\n            \"HealthScore\": 100,\n            \"EventsTotalCount\": 0,\n            \"HealthLevel\": \"HEALTH\"\n        }\n    }\n}",
        "title": "Requesting health score"
      }
    ],
    "DescribeMailProfile": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeMailProfile\n&Product=mysql\n&ProfileType=scheduler_mail_configuration\n&Offset=0\n&Limit=20\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"TotalCount\": 1,\n        \"RequestId\": \"c7324330-5fc8-11eb-a3f4-96666666\",\n        \"ProfileList\": [\n            {\n                \"ProfileId\": \"12345\",\n                \"ProfileType\": \"dbScan_mail_configuration\",\n                \"ProfileLevel\": \"User\",\n                \"ProfileName\": “Test UIN”,\n                \"ProfileInfo\": {\n                    \"MailConfiguration\": {\n                        \"HealthStatus\": [\n                            \"HEALTH\",\n                            \"SUB_HEALTH\",\n                            \"RISK\",\n                            \"HIGH_RISK\"\n                        ],\n                        \"Region\": [\n                            \"eu-moscow\"\n                        ],\n                        \"ContactGroup\": [],\n                        \"SendMail\": 0,\n                        \"ContactPerson\": [\n                            123\n                        ]\n                    },\n                    \"Language\": \"zh\"\n                }\n            }\n        ]\n    }\n}",
        "title": "Obtaining email configuration"
      }
    ],
    "DescribeSlowLogTimeSeriesStats": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeSlowLogTimeSeriesStats\n&InstanceId=test\n&StartTime=2019-01-01 00:00:00\n&EndTime=2019-01-01 01:00:00\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"TimeSeries\": [\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568113800\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568191680\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568269560\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568347440\n            },\n            {\n                \"Count\": 2,\n                \"Timestamp\": 1568425320\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568503200\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568581080\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568658960\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568736840\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568814720\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568892600\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1568970480\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569048360\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569126240\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569204120\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569282000\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569359880\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569437760\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569515640\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569593520\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569671400\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569749280\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569827160\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569905040\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1569982920\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1570060800\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1570138680\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1570216560\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1570294440\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1570372320\n            },\n            {\n                \"Count\": 0,\n                \"Timestamp\": 1570450200\n            }\n        ],\n        \"SeriesData\": {\n            \"Series\": [\n                {\n                    \"Values\": [\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1,\n                        -1\n                    ],\n                    \"Metric\": \"cpu_use_rate\",\n                    \"Unit\": \"%\"\n                }\n            ],\n            \"Timestamp\": [\n                1568113800,\n                1568191680,\n                1568269560,\n                1568347440,\n                1568425320,\n                1568503200,\n                1568581080,\n                1568658960,\n                1568736840,\n                1568814720,\n                1568892600,\n                1568970480,\n                1569048360,\n                1569126240,\n                1569204120,\n                1569282000,\n                1569359880,\n                1569437760,\n                1569515640,\n                1569593520,\n                1569671400,\n                1569749280,\n                1569827160,\n                1569905040,\n                1569982920,\n                1570060800,\n                1570138680,\n                1570216560,\n                1570294440,\n                1570372320,\n                1570450200\n            ]\n        },\n        \"RequestId\": \"b445f8ee-9357-4d93-83c2-3596f9d1f27e\",\n        \"Period\": 77880\n    }\n}",
        "title": "Getting the slow log statistics histogram"
      }
    ],
    "DescribeSlowLogTopSqls": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeSlowLogTopSqls\n&InstanceId=test\n&SortBy=QueryTime\n&OrderBy=ASC\n&Limit=10\n&Offset=0\n&StartTime=2019-01-01 00:00:00\n&EndTime=2019-01-01 01:00:00\n&SchemaList.0.Schema=dbName\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"\",\n        \"TotalCount\": 1,\n        \"Rows\": [\n            {\n                \"RowsExaminedMax\": 0,\n                \"ExecTimes\": 2,\n                \"RowsSentMax\": 0,\n                \"QueryTimeRatio\": 100,\n                \"LockTimeRatio\": 0,\n                \"LockTimeMin\": 0,\n                \"RowsExaminedRatio\": 0,\n                \"Schema\": \"dbName\",\n                \"SqlText\": \"select test from test\",\n                \"QueryTime\": 28.17341,\n                \"SqlTemplate\": \"select ? from ?\",\n                \"QueryTimeMax\": 14.086705,\n                \"LockTime\": 0,\n                \"RowsSent\": 0,\n                \"RowsSentMin\": 0,\n                \"LockTimeMax\": 0,\n                \"RowsSentRatio\": 0,\n                \"RowsExamined\": 0,\n                \"RowsExaminedMin\": 0,\n                \"QueryTimeMin\": 0\n            }\n        ]\n    }\n}",
        "title": "Querying slow log statistics during a specified time period by SQL template"
      }
    ],
    "DescribeSlowLogUserHostStats": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeSlowLogUserHostStats\n&Product=mysql\n&InstanceId=cdb-c1nl9rpv\n&StartTime=2020-09-21T00:00:00+00:00\n&EndTime=2020-09-22T00:00:00+00:00\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"TotalCount\": 2,\n        \"RequestId\": \"e2a51350-8c9f-11eb-bc0f-c9f5ab88d057\",\n        \"Items\": [\n            {\n                \"UserHost\": \"10.3.1.1\",\n                \"Ratio\": 50,\n                \"Count\": 29\n            },\n            {\n                \"UserHost\": \"10.3.1.2\",\n                \"Ratio\": 50,\n                \"Count\": 29\n            }\n        ]\n    }\n}",
        "title": "Obtaining the statistical distribution chart of slow log source addresses."
      }
    ],
    "DescribeTopSpaceSchemaTimeSeries": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeTopSpaceSchemaTimeSeries\n&InstanceId=cdb-test\n&Limit=2\n&StartDate=2021-01-01\n&EndDate=2021-01-01\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"d97eacb0-cebd-40b6-963b-579092454f05\",\n        \"TopSpaceSchemaTimeSeries\": [\n            {\n                \"TableSchema\": \"test_bak\",\n                \"SeriesData\": {\n                    \"Series\": [\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"DataFree\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"DataLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"IndexLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"TotalLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"FragRatio\",\n                            \"Unit\": \"%\"\n                        },\n                        {\n                            \"Values\": [\n                                9\n                            ],\n                            \"Metric\": \"TableRows\",\n                            \"Unit\": \"\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"PhysicalFileSize\",\n                            \"Unit\": \"MB\"\n                        }\n                    ],\n                    \"Timestamp\": [\n                        1588089600\n                    ]\n                }\n            },\n            {\n                \"TableSchema\": \"test_bak\",\n                \"SeriesData\": {\n                    \"Series\": [\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"DataFree\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"DataLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"IndexLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"TotalLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"FragRatio\",\n                            \"Unit\": \"%\"\n                        },\n                        {\n                            \"Values\": [\n                                6\n                            ],\n                            \"Metric\": \"TableRows\",\n                            \"Unit\": \"\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"PhysicalFileSize\",\n                            \"Unit\": \"MB\"\n                        }\n                    ],\n                    \"Timestamp\": [\n                        1588089600\n                    ]\n                }\n            }\n        ]\n    }\n}",
        "title": "Obtaining the daily space statistics of top databases during a specified time period"
      }
    ],
    "DescribeTopSpaceSchemas": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeTopSpaceSchemas\n&InstanceId=cdb-test\n&Limit=2\n&SortBy=TableRows\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"ed279d8b-a9d9-48d6-9429-e0fde000994a\",\n        \"Timestamp\": 1603819881,\n        \"TopSpaceSchemas\": [\n            {\n                \"DataFree\": 0,\n                \"TotalLength\": 0.1,\n                \"TableSchema\": \"test_bak\",\n                \"FragRatio\": 0,\n                \"DataLength\": 0.1,\n                \"PhysicalFileSize\": 0.1,\n                \"TableRows\": 9,\n                \"IndexLength\": 0\n            },\n            {\n                \"DataFree\": 0,\n                \"TotalLength\": 0.1,\n                \"TableSchema\": \"test_bak\",\n                \"FragRatio\": 0,\n                \"DataLength\": 0.1,\n                \"PhysicalFileSize\": 0.1,\n                \"TableRows\": 9,\n                \"IndexLength\": 0\n            }\n        ]\n    }\n}",
        "title": "Obtaining the space statistics of top databases"
      }
    ],
    "DescribeTopSpaceTableTimeSeries": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeTopSpaceTableTimeSeries\n&InstanceId=cdb-test\n&Limit=2\n&StartDate=2020-01-01\n&EndDate=2020-01-01\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"d97eacb0-cebd-40b6-963b-579092454f05\",\n        \"TopSpaceTableTimeSeries\": [\n            {\n                \"TableName\": \"test\",\n                \"TableSchema\": \"test_bak\",\n                \"SeriesData\": {\n                    \"Series\": [\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"DataFree\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"DataLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"IndexLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"TotalLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"FragRatio\",\n                            \"Unit\": \"%\"\n                        },\n                        {\n                            \"Values\": [\n                                9\n                            ],\n                            \"Metric\": \"TableRows\",\n                            \"Unit\": \"\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"PhysicalFileSize\",\n                            \"Unit\": \"MB\"\n                        }\n                    ],\n                    \"Timestamp\": [\n                        1588089600\n                    ]\n                },\n                \"Engine\": \"InnoDB\"\n            },\n            {\n                \"TableName\": \"test22\",\n                \"TableSchema\": \"test_bak\",\n                \"SeriesData\": {\n                    \"Series\": [\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"DataFree\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"DataLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"IndexLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"TotalLength\",\n                            \"Unit\": \"MB\"\n                        },\n                        {\n                            \"Values\": [\n                                0\n                            ],\n                            \"Metric\": \"FragRatio\",\n                            \"Unit\": \"%\"\n                        },\n                        {\n                            \"Values\": [\n                                6\n                            ],\n                            \"Metric\": \"TableRows\",\n                            \"Unit\": \"\"\n                        },\n                        {\n                            \"Values\": [\n                                0.1\n                            ],\n                            \"Metric\": \"PhysicalFileSize\",\n                            \"Unit\": \"MB\"\n                        }\n                    ],\n                    \"Timestamp\": [\n                        1588089600\n                    ]\n                },\n                \"Engine\": \"InnoDB\"\n            }\n        ]\n    }\n}",
        "title": "Getting daily space statistics of top tables during a specified time period"
      }
    ],
    "DescribeTopSpaceTables": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeTopSpaceTables\n&InstanceId=cdb-test\n&Limit=2\n&SortBy=TableRows\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"ed279d8b-a9d9-48d6-9429-e0fde000994a\",\n        \"Timestamp\": 1603819881,\n        \"TopSpaceTables\": [\n            {\n                \"DataFree\": 0,\n                \"TableName\": \"test\",\n                \"TotalLength\": 0.1,\n                \"TableSchema\": \"test_bak\",\n                \"FragRatio\": 0,\n                \"DataLength\": 0.1,\n                \"PhysicalFileSize\": 0.1,\n                \"TableRows\": 9,\n                \"Engine\": \"InnoDB\",\n                \"IndexLength\": 0\n            },\n            {\n                \"DataFree\": 0,\n                \"TableName\": \"test\",\n                \"TotalLength\": 0.1,\n                \"TableSchema\": \"test_bak\",\n                \"FragRatio\": 0,\n                \"DataLength\": 0.1,\n                \"PhysicalFileSize\": 0.1,\n                \"TableRows\": 9,\n                \"Engine\": \"InnoDB\",\n                \"IndexLength\": 0\n            }\n        ]\n    }\n}",
        "title": "Getting the space statistics of top tables"
      }
    ],
    "DescribeUserSqlAdvice": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeUserSqlAdvice\n&InstanceId=cdb-c1nl9rpv\n&SqlText=select * from t1 where id in ( ? )\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"e2a51350-8c9f-11eb-bc0f-c9f5ab88d057\",\n        \"Advices\": \"[{\\\"TableName\\\": \\\"t1\\\", \\\"TableSchema\\\": \\\"test\\\", \\\"Keys\\\": [{\\\"SqlText\\\": \\\"alter table `test`.`t1` add index index_0(`id`);\\\"}]}]\",\n        \"Comments\": \"[]\",\n        \"Schema\": \"test\",\n        \"Tables\": \"[{\\\"TableName\\\": \\\"t1\\\", \\\"TableSchema\\\": \\\"test\\\", \\\"TableDDL\\\": \\\"CREATE TABLE `test` (\\n  `id` varchar(36) NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC\\\"}]\",\n        \"SqlText\": \"select * from t1 where id in ( ? )\",\n        \"SqlPlan\": \"{\\\"Before\\\": [{\\\"Format\\\": \\\"Table\\\", \\\"Data\\\": {\\\"Names\\\": [\\\"id\\\", \\\"select_type\\\", \\\"table\\\", \\\"partitions\\\", \\\"type\\\", \\\"possible_keys\\\", \\\"key\\\", \\\"key_len\\\", \\\"ref\\\", \\\"rows\\\", \\\"filtered\\\", \\\"Extra\\\"], \\\"Data\\\": [ [1, \\\"SIMPLE\\\", \\\"t1\\\", null, \\\"ALL\\\", null, null, null, null, 1530, 10, \\\"Using where\\\" ]]}}], \\\"After\\\": [{ \\\"Format\\\": \\\"Table\\\", \\\"Data\\\": {\\\"Names\\\": [\\\"id\\\", \\\"select_type\\\", \\\"table\\\", \\\"partitions\\\", \\\"type\\\", \\\"possible_keys\\\", \\\"key\\\", \\\"key_len\\\", \\\"ref\\\", \\\"rows\\\", \\\"filtered\\\", \\\"Extra\\\"], \\\"Data\\\": [[1, \\\"SIMPLE\\\", \\\"t1\\\", null, \\\"ref\\\", \\\"index_0\\\", \\\"index_0\\\", 1056, \\\"const\\\", 51, 100.00, null]]}}]}\",\n        \"Cost\": \"{\\\"Before\\\": 0.1, \\\"After\\\": 0.03, \\\"Ratio\\\": 90.61}\"\n    }\n}",
        "title": "Obtaining SQL statement optimization suggestions"
      },
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=DescribeUserSqlAdvice\n&InstanceId=cdb-c1nl9rpv\n&SqlText=select * from t1 where id = ?\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"e2a51350-8c9f-11eb-bc0f-c9f5ab88d057\",\n        \"Advices\": \"\",\n        \"Comments\": \"\",\n        \"Schema\": \"test\",\n        \"Tables\": \"[{\\\"TableName\\\": \\\"t1\\\", \\\"TableSchema\\\": \\\"test\\\", \\\"TableDDL\\\": \\\"CREATE TABLE `test` (\\n  `id` varchar(36) NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC\\\"}]\",\n        \"SqlText\": \"select * from t1 where id in ( ? )\",\n        \"SqlPlan\": \"\",\n        \"Cost\": \"\"\n    }\n}",
        "title": "Obtaining a suggestion that there is no need to optimize SQL statements"
      }
    ],
    "ModifyDiagDBInstanceConf": [
      {
        "document": "",
        "input": "https://dbbrain.tencentcloudapi.com/?Action=ModifyDiagDBInstanceConf\n&InstanceIds.0=cdb-fyclrp7r\n&InstanceConfs.DailyInspection=Yes\n&Regions=All\n&Product=mysql\n&<common request parameters>",
        "output": "{\n    \"Response\": {\n        \"RequestId\": \"77db16d7-bbe8-48a7-868b-ed776a96f1ab\"\n    }\n}",
        "title": "Modifying the inspection configuration of instance"
      }
    ]
  },
  "version": "1.0"
}