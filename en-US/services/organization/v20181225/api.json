{
  "actions": {
    "AcceptOrganizationInvitation": {
      "document": "This API is used to accept an invitation to an organization.",
      "input": "AcceptOrganizationInvitationRequest",
      "name": "Accepts an invitation to an organization",
      "output": "AcceptOrganizationInvitationResponse",
      "status": "online"
    },
    "AddOrganizationNode": {
      "document": "This API is used to add an organizational unit.",
      "input": "AddOrganizationNodeRequest",
      "name": "Adds an organizational unit",
      "output": "AddOrganizationNodeResponse",
      "status": "online"
    },
    "CancelOrganizationInvitation": {
      "document": "This API is used to cancel an invitation to an organization.",
      "input": "CancelOrganizationInvitationRequest",
      "name": "Cancels an invitation to an organization",
      "output": "CancelOrganizationInvitationResponse",
      "status": "online"
    },
    "CreateOrganization": {
      "document": "This API is used to create an organization.",
      "input": "CreateOrganizationRequest",
      "name": "Creates an organization",
      "output": "CreateOrganizationResponse",
      "status": "online"
    },
    "DeleteOrganization": {
      "document": "This API is used to delete an organization.",
      "input": "DeleteOrganizationRequest",
      "name": "Deletes an organization",
      "output": "DeleteOrganizationResponse",
      "status": "online"
    },
    "DeleteOrganizationMemberFromNode": {
      "document": "This API is used to delete an organization member.",
      "input": "DeleteOrganizationMemberFromNodeRequest",
      "name": "Deletes an organization member",
      "output": "DeleteOrganizationMemberFromNodeResponse",
      "status": "online"
    },
    "DeleteOrganizationMembers": {
      "document": "This API is used to delete multiple organization members in a single request.",
      "input": "DeleteOrganizationMembersRequest",
      "name": "Deletes multiple organization members",
      "output": "DeleteOrganizationMembersResponse",
      "status": "online"
    },
    "DeleteOrganizationNodes": {
      "document": "This API is used to delete multiple organizational units in a single request.",
      "input": "DeleteOrganizationNodesRequest",
      "name": "Deletes multiple organizational units",
      "output": "DeleteOrganizationNodesResponse",
      "status": "online"
    },
    "DenyOrganizationInvitation": {
      "document": "This API is used to decline an invitation to an organization.",
      "input": "DenyOrganizationInvitationRequest",
      "name": "Declines an invitation to an organization",
      "output": "DenyOrganizationInvitationResponse",
      "status": "online"
    },
    "GetOrganization": {
      "document": "This API is used to obtain information on organizations.",
      "input": "GetOrganizationRequest",
      "name": "Obtains organization information",
      "output": "GetOrganizationResponse",
      "status": "online"
    },
    "GetOrganizationMember": {
      "document": "This API is used to obtain information on organization members.",
      "input": "GetOrganizationMemberRequest",
      "name": "Obtains information on organization members",
      "output": "GetOrganizationMemberResponse",
      "status": "online"
    },
    "ListOrganizationInvitations": {
      "document": "This API is used to obtain an invitation list.",
      "input": "ListOrganizationInvitationsRequest",
      "name": "Obtains an invitation list",
      "output": "ListOrganizationInvitationsResponse",
      "status": "online"
    },
    "ListOrganizationMembers": {
      "document": "This API is used to obtain a list of organization members.",
      "input": "ListOrganizationMembersRequest",
      "name": "Obtains a list of organization members",
      "output": "ListOrganizationMembersResponse",
      "status": "online"
    },
    "ListOrganizationNodeMembers": {
      "document": "This API is used to obtain a list of organizational unit members.",
      "input": "ListOrganizationNodeMembersRequest",
      "name": "Obtains a list of organizational unit members",
      "output": "ListOrganizationNodeMembersResponse",
      "status": "online"
    },
    "ListOrganizationNodes": {
      "document": "This API is used to obtain a list of organizational units.",
      "input": "ListOrganizationNodesRequest",
      "name": "Obtains a list of organizational units",
      "output": "ListOrganizationNodesResponse",
      "status": "online"
    },
    "MoveOrganizationMembersToNode": {
      "document": "This API is used to move members to a specified organizational unit.",
      "input": "MoveOrganizationMembersToNodeRequest",
      "name": "Moves members to a specified organizational unit",
      "output": "MoveOrganizationMembersToNodeResponse",
      "status": "online"
    },
    "QuitOrganization": {
      "document": "This API is used to quit an organization.",
      "input": "QuitOrganizationRequest",
      "name": "Quits an organization",
      "output": "QuitOrganizationResponse",
      "status": "online"
    },
    "SendOrganizationInvitation": {
      "document": "This API is used to send an invitation to join an organization.",
      "input": "SendOrganizationInvitationRequest",
      "name": "Sends an invitation to join an organization",
      "output": "SendOrganizationInvitationResponse",
      "status": "online"
    },
    "UpdateOrganizationMember": {
      "document": "This API is used to update information on organization members.",
      "input": "UpdateOrganizationMemberRequest",
      "name": "Updates information on organization members",
      "output": "UpdateOrganizationMemberResponse",
      "status": "online"
    },
    "UpdateOrganizationNode": {
      "document": "This API is used to update organizational units.",
      "input": "UpdateOrganizationNodeRequest",
      "name": "Updates organizational units",
      "output": "UpdateOrganizationNodeResponse",
      "status": "online"
    }
  },
  "metadata": {
    "apiVersion": "2018-12-25",
    "serviceNameCN": "集团账号管理",
    "serviceShortName": "organization"
  },
  "objects": {
    "AcceptOrganizationInvitationRequest": {
      "document": "AcceptOrganizationInvitation request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Invitation ID",
          "example": "",
          "member": "uint64",
          "name": "Id",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "AcceptOrganizationInvitationResponse": {
      "document": "AcceptOrganizationInvitation response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AddOrganizationNodeRequest": {
      "document": "AddOrganizationNode request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Parent organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "ParentNodeId",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Organizational unit name",
          "example": "",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "AddOrganizationNodeResponse": {
      "document": "AddOrganizationNode response structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "NodeId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CancelOrganizationInvitationRequest": {
      "document": "CancelOrganizationInvitation request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Invitation ID",
          "example": "",
          "member": "uint64",
          "name": "Id",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "CancelOrganizationInvitationResponse": {
      "document": "CancelOrganizationInvitation response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateOrganizationRequest": {
      "document": "CreateOrganization request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organization type; currently its value is fixed as `1`",
          "example": "",
          "member": "uint64",
          "name": "OrgType",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "CreateOrganizationResponse": {
      "document": "CreateOrganization response structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organization ID",
          "example": "",
          "member": "uint64",
          "name": "OrgId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator's name",
          "example": "",
          "member": "string",
          "name": "Nickname",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator's email address",
          "example": "",
          "member": "string",
          "name": "Mail",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Organization type",
          "example": "",
          "member": "uint64",
          "name": "OrgType",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteOrganizationMemberFromNodeRequest": {
      "document": "DeleteOrganizationMemberFromNode request structure.",
      "members": [
        {
          "disabled": false,
          "document": "UIN of the member to be deleted",
          "example": "",
          "member": "uint64",
          "name": "MemberUin",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "NodeId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DeleteOrganizationMemberFromNodeResponse": {
      "document": "DeleteOrganizationMemberFromNode response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteOrganizationMembersRequest": {
      "document": "DeleteOrganizationMembers request structure.",
      "members": [
        {
          "disabled": false,
          "document": "List of UINs of members to be deleted",
          "example": "[\"1\\r\\n\"]",
          "member": "uint64",
          "name": "Uins",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "DeleteOrganizationMembersResponse": {
      "document": "DeleteOrganizationMembers response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteOrganizationNodesRequest": {
      "document": "DeleteOrganizationNodes request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organizational unit ID list",
          "example": "",
          "member": "uint64",
          "name": "NodeIds",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "DeleteOrganizationNodesResponse": {
      "document": "DeleteOrganizationNodes response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteOrganizationRequest": {
      "document": "DeleteOrganization request structure.",
      "members": [],
      "type": "object"
    },
    "DeleteOrganizationResponse": {
      "document": "DeleteOrganization response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DenyOrganizationInvitationRequest": {
      "document": "DenyOrganizationInvitation request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Invitation ID",
          "example": "",
          "member": "uint64",
          "name": "Id",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DenyOrganizationInvitationResponse": {
      "document": "DenyOrganizationInvitation response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetOrganizationMemberRequest": {
      "document": "GetOrganizationMember request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organization member UIN",
          "example": "",
          "member": "uint64",
          "name": "MemberUin",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "GetOrganizationMemberResponse": {
      "document": "GetOrganizationMember response structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organization member UIN",
          "example": "",
          "member": "uint64",
          "name": "Uin",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Organization member name",
          "example": "",
          "member": "string",
          "name": "Name",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Notes",
          "example": "",
          "member": "string",
          "name": "Remark",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Joining time ",
          "example": "",
          "member": "datetime",
          "name": "JoinTime",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "NodeId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Organizational unit name",
          "example": "",
          "member": "string",
          "name": "NodeName",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Parent organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "ParentNodeId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "GetOrganizationRequest": {
      "document": "GetOrganization request structure.",
      "members": [],
      "type": "object"
    },
    "GetOrganizationResponse": {
      "document": "GetOrganization response structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organization ID",
          "example": "",
          "member": "uint64",
          "name": "OrgId",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator UIN",
          "example": "",
          "member": "uint64",
          "name": "HostUin",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator's name",
          "example": "",
          "member": "string",
          "name": "Nickname",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator's email address",
          "example": "",
          "member": "string",
          "name": "Mail",
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Organization type",
          "example": "",
          "member": "uint64",
          "name": "OrgType",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Whether the organization is empty or not ",
          "example": "",
          "member": "uint64",
          "name": "IsEmpty",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListOrganizationInvitationsRequest": {
      "document": "ListOrganizationInvitations request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Whether to list the invitations you received or the invitations you sent. `1`: list the invitations you received; `0`: list the invitations you sent.",
          "example": "",
          "member": "uint64",
          "name": "Invited",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Offset",
          "example": "",
          "member": "uint64",
          "name": "Offset",
          "required": false,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Limit",
          "example": "",
          "member": "uint64",
          "name": "Limit",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListOrganizationInvitationsResponse": {
      "document": "ListOrganizationInvitations response structure.",
      "members": [
        {
          "disabled": false,
          "document": "List of invitations",
          "example": "",
          "member": "OrgInvitation",
          "name": "Invitations",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Total number of results",
          "example": "",
          "member": "uint64",
          "name": "TotalCount",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListOrganizationMembersRequest": {
      "document": "ListOrganizationMembers request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Offset",
          "example": "",
          "member": "uint64",
          "name": "Offset",
          "required": false,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Limit",
          "example": "",
          "member": "uint64",
          "name": "Limit",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListOrganizationMembersResponse": {
      "document": "ListOrganizationMembers response structure.",
      "members": [
        {
          "disabled": false,
          "document": "Member list",
          "example": "",
          "member": "OrgMember",
          "name": "Members",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Total number of results",
          "example": "",
          "member": "uint64",
          "name": "TotalCount",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListOrganizationNodeMembersRequest": {
      "document": "ListOrganizationNodeMembers request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "NodeId",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Offset",
          "example": "",
          "member": "uint64",
          "name": "Offset",
          "required": false,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Limit",
          "example": "",
          "member": "uint64",
          "name": "Limit",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "ListOrganizationNodeMembersResponse": {
      "document": "ListOrganizationNodeMembers response structure.",
      "members": [
        {
          "disabled": false,
          "document": "Total number of results",
          "example": "",
          "member": "uint64",
          "name": "TotalCount",
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Member list",
          "example": "",
          "member": "OrgMember",
          "name": "Members",
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "ListOrganizationNodesRequest": {
      "document": "ListOrganizationNodes request structure.",
      "members": [],
      "type": "object"
    },
    "ListOrganizationNodesResponse": {
      "document": "ListOrganizationNodes response structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organizational unit list",
          "example": "无",
          "member": "OrgNode",
          "name": "Nodes",
          "required": true,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "MoveOrganizationMembersToNodeRequest": {
      "document": "MoveOrganizationMembersToNode request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "NodeId",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Member UIN list",
          "example": "",
          "member": "uint64",
          "name": "Uins",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "MoveOrganizationMembersToNodeResponse": {
      "document": "MoveOrganizationMembersToNode response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "OrgInvitation": {
      "document": "Information on an invitation to an organization.",
      "members": [
        {
          "disabled": false,
          "document": "Invitation ID",
          "example": "",
          "member": "uint64",
          "name": "Id",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "UIN of the invitee",
          "example": "",
          "member": "uint64",
          "name": "Uin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator UIN",
          "example": "",
          "member": "uint64",
          "name": "HostUin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator's name",
          "example": "",
          "member": "string",
          "name": "HostName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Creator's email address",
          "example": "",
          "member": "string",
          "name": "HostMail",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Invitation status. `-1`: expired; `0`: normal; `1`: accepted; `2`: invalid; `3`: cancelled",
          "example": "",
          "member": "uint64",
          "name": "Status",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Name",
          "example": "",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Notes",
          "example": "",
          "member": "string",
          "name": "Remark",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Organization type",
          "example": "",
          "member": "uint64",
          "name": "OrgType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Time of invitation",
          "example": "",
          "member": "datetime",
          "name": "InviteTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Expiration time",
          "example": "",
          "member": "datetime",
          "name": "ExpireTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "OrgMember": {
      "document": "Information on an organization member.",
      "members": [
        {
          "disabled": false,
          "document": "UIN",
          "example": "",
          "member": "uint64",
          "name": "Uin",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Name",
          "example": "",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Notes",
          "example": "",
          "member": "string",
          "name": "Remark",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Joining time",
          "example": "",
          "member": "datetime",
          "name": "JoinTime",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "OrgNode": {
      "document": "Information on an organizational unit.",
      "members": [
        {
          "disabled": false,
          "document": "Organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "NodeId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Name",
          "example": "",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Parent organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "ParentNodeId",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "disabled": false,
          "document": "Number of members",
          "example": "",
          "member": "uint64",
          "name": "MemberCount",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "QuitOrganizationRequest": {
      "document": "QuitOrganization request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organization ID",
          "example": "",
          "member": "uint64",
          "name": "OrgId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "QuitOrganizationResponse": {
      "document": "QuitOrganization response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "SendOrganizationInvitationRequest": {
      "document": "SendOrganizationInvitation request structure.",
      "members": [
        {
          "disabled": false,
          "document": "UIN of the invitee",
          "example": "100005229292",
          "member": "uint64",
          "name": "InviteUin",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Name",
          "example": "testAccount",
          "member": "string",
          "name": "Name",
          "required": true,
          "type": "string"
        },
        {
          "disabled": false,
          "document": "Notes",
          "example": "test",
          "member": "string",
          "name": "Remark",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "SendOrganizationInvitationResponse": {
      "document": "SendOrganizationInvitation response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateOrganizationMemberRequest": {
      "document": "UpdateOrganizationMember request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Member UIN",
          "example": "",
          "member": "uint64",
          "name": "MemberUin",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Name",
          "example": "",
          "member": "string",
          "name": "Name",
          "required": false,
          "type": "string"
        },
        {
          "disabled": false,
          "document": "Notes",
          "example": "",
          "member": "string",
          "name": "Remark",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateOrganizationMemberResponse": {
      "document": "UpdateOrganizationMember response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UpdateOrganizationNodeRequest": {
      "document": "UpdateOrganizationNode request structure.",
      "members": [
        {
          "disabled": false,
          "document": "Organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "NodeId",
          "required": true,
          "type": "int"
        },
        {
          "disabled": false,
          "document": "Name",
          "example": "",
          "member": "string",
          "name": "Name",
          "required": false,
          "type": "string"
        },
        {
          "disabled": false,
          "document": "Parent organizational unit ID",
          "example": "",
          "member": "uint64",
          "name": "ParentNodeId",
          "required": false,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "UpdateOrganizationNodeResponse": {
      "document": "UpdateOrganizationNode response structure.",
      "members": [
        {
          "document": "The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    }
  },
  "version": "1.0"
}