{
  "actions": {
    "CreateCloudRecording": {
      "document": "API description:\nThis API is used to start an on-cloud recording task. It records the audio and video streams in a room and saves them to the specified cloud storage. You can use this API to record the streams in a room separately, or you can mix the streams first and then record the mixed stream.\n\nYou can use this API to perform the following operations:\n* Specify the anchors whose streams you want or do not want to record by using the `RecordParams` parameter\n* Specify the storage service you want to save recording files to by using the `StorageParams` parameter. Currently, you can only save recording files to VOD (`CloudVod`).\n* Specify transcoding settings for mixed-stream recording, including video resolution, video bitrate, frame rate, and audio quality, by using `MixTranscodeParams`\n* Specify the layout of different videos in mixed-stream recording mode or select an auto-arranged layout template\n\nKey concepts:\n* Single-stream recording: Record the audio and video of each subscribed user (`UserId`) in a room and save the recording files to VOD.\n* Mixed-stream recording: Mix the audios and videos of subscribed users (`UserId`) in a room, record the mixed stream, and save the recording files to VOD. After a recording task ends, you can go to the VOD console (https://console.cloud.tencent.com/vod/media) to view the recording files.",
      "input": "CreateCloudRecordingRequest",
      "name": "Starts an on-cloud recording task",
      "output": "CreateCloudRecordingResponse",
      "status": "online"
    },
    "DeleteCloudRecording": {
      "document": "This API is used to stop a recording task. If a task is stopped successfully, but the uploading of recording files has not completed, the backend will continue to upload the files and will notify you via a callback when the upload is completed.",
      "input": "DeleteCloudRecordingRequest",
      "name": "Stops an on-cloud recording task",
      "output": "DeleteCloudRecordingResponse",
      "status": "online"
    },
    "DescribeCloudRecording": {
      "document": "This API is used to query the status of a recording task after it starts. It works only when a task is in progress. If the task has already ended when this API is called, an error will be returned.\nIf a recording file is being uploaded to VOD, the response parameter `StorageFileList` will not contain the information of the recording file. Please listen for the recording file callback to get the information.",
      "input": "DescribeCloudRecordingRequest",
      "name": "Queries the status of a recording task",
      "output": "DescribeCloudRecordingResponse",
      "status": "online"
    },
    "DismissRoom": {
      "document": "This API is used to remove all users from a room and dismiss the room. It supports all platforms. For Android, iOS, Windows, and macOS, the TRTC SDK needs to be upgraded to v6.6 or above.",
      "input": "DismissRoomRequest",
      "name": "Dismisses a room",
      "output": "DismissRoomResponse",
      "status": "online"
    },
    "DismissRoomByStrRoomId": {
      "document": "This API is used to remove all users from a room and close the room. It works on all platforms. For Android, iOS, Windows, and macOS, you need to update the TRTC SDK to version 6.6 or above.",
      "input": "DismissRoomByStrRoomIdRequest",
      "name": "Closes a room (by room ID in string type)",
      "output": "DismissRoomByStrRoomIdResponse",
      "status": "online"
    },
    "ModifyCloudRecording": {
      "document": "This API is used to modify a recording task. It works only when a task is in progress. If the task has already ended when this API is called, an error will be returned. You need to specify all the parameters for each request instead of just the ones you want to modify.",
      "input": "ModifyCloudRecordingRequest",
      "name": "Modifies a recording task",
      "output": "ModifyCloudRecordingResponse",
      "status": "online"
    },
    "RemoveUser": {
      "document": "This API is used to remove a user from a room. It is applicable to scenarios where the anchor, room owner, or admin wants to kick out a user. It supports all platforms. For Android, iOS, Windows, and macOS, the TRTC SDK needs to be upgraded to v6.6 or above.",
      "input": "RemoveUserRequest",
      "name": "Removes a user",
      "output": "RemoveUserResponse",
      "status": "online"
    },
    "RemoveUserByStrRoomId": {
      "document": "This API is used to remove a user from a room. It allows the anchor, room owner, or admin to kick out a user, and works on all platforms. For Android, iOS, Windows, and macOS, you need to update the TRTC SDK to version 6.6 or above.",
      "input": "RemoveUserByStrRoomIdRequest",
      "name": "Removes a user from a room (by room ID in string type)",
      "output": "RemoveUserByStrRoomIdResponse",
      "status": "online"
    },
    "SetUserBlocked": {
      "document": "This API is used to disable or enable the audio and video of a user. It can be used by an anchor, room owner, or admin to block or unblock a user. It supports platforms including Android, iOS, Windows, macOS, web, and WeChat Mini Program. Use this API if the room ID is a number.",
      "input": "SetUserBlockedRequest",
      "name": "Disables/Enables the audio and video of a user",
      "output": "SetUserBlockedResponse",
      "status": "online"
    },
    "SetUserBlockedByStrRoomId": {
      "document": "This API allows an anchor, room owner, admin to mute/unmute a user. It can be used on platforms including Android, iOS, Windows, macOS, web, and WeChat Mini Program. Use this API when the room ID is a string.",
      "input": "SetUserBlockedByStrRoomIdRequest",
      "name": "Disables/Enables the audio and video of a user (string-type room ID)",
      "output": "SetUserBlockedByStrRoomIdResponse",
      "status": "online"
    },
    "StartPublishCdnStream": {
      "document": "This API is used to mix streams and relay the mixed stream to CDNs. You can use this API to do the following:\n1. Publish (also known as “relay”) the audio/video stream of one anchor to CDNs. For details, see example 2 (starting a task to relay the audio and video of a stream) and example 3 (starting a task to relay only the audio of a stream).\n2. Mix the streams of multiple anchors in a room or in different rooms and publish the mixed stream to CDNs. You can use `AudioParams.SubscribeAudioList` to specify the users whose audios are mixed, and use `VideoParams.LayoutParams` to specify the layout of the anchors’ videos. For details, see example 1 (mixing streams and publishing the mixed stream to a CDN).\n3. Mix multiple streams in a room according to a template and publish the mixed stream to CDNs. The TRTC backend will detect the change of anchors in the room and adjust the video layout automatically according to the stream mixing template. The following template types are supported:\n     - Floating: The entire screen is covered by the video of the first user who enters the room, and the videos of other users are displayed as small windows in rows in the bottom-left corner in room entry sequence. The screen allows up to 4 rows of 4 small videos, which float over the large video. Up to 1 large and 15 small videos can be displayed.\n     - Grid: The videos of all users split the screen evenly. The more the users, the smaller the video dimensions. Up to 16 videos are supported.\n     - Screen sharing: This is designed for video conferencing and online education. The shared screen (or camera video of the anchor) is always displayed as the large video, which occupies the left half of the screen, and the videos of other users occupy the right half in up to two columns of up to eight small videos each. Up to 1 large video and 15 small videos can be displayed. If the upstream aspect ratio does not match the output, the large video on the left will be scaled and displayed in whole, while the small videos on the right will be cropped.\n4. Publish audio/video streams to up to 10 CDNs at a time. You can use `PublishCdnParams.PublishCdnUrl` to specify the URLs of the CDNs to publish to. To publish to Tencent Cloud’s CDN, set `PublishCdnParams.IsTencentCdn` to 1.\n5. Configure a server-side callback to have Tencent Cloud send relay status updates to your server in the form of HTTP/HTTPS POST requests. To use the callback for relay events, please contact Technical Support.\n6. The API supports four regions: Guangzhou, Shanghai, Beijing, and Hong Kong. If you relay to regions outside the Chinese mainland, select Hong Kong.\n \nNotes:\n1. **Because On-Cloud MixTranscoding is a paid feature, calling this API will incur MixTranscoding fees. For details, see [Billing of MixTranscoding and Relay to CDN](https://intl.cloud.tencent.com/document/product/647/49446?from_cn_redirect=1).**\n2. **Relaying to third-party CDNs will incur relaying fees. For details, see [Billing of MixTranscoding and Relay to CDN](https://intl.cloud.tencent.com/document/product/647/82155?from_cn_redirect=1).**\n\nOthers:\n1. You need to first call `StartPublishCdnStream` to start a relay task and get the task ID before you can use the `UpdatePublishCdnStream` API to modify the task and `StopPublishCdnStream` to stop the task.\n2. To ensure the stability of relaying, you cannot switch between relaying audio only, relaying audio and video, and relaying video only for the same task.\n3. To ensure the stability of relaying, you cannot change the video codec, audio codec, audio sample rate, audio bitrate, or sound channels using the `UpdatePublishCdnStream` API. We recommend you pass in all the other parameters.\n4. When you relay a single stream, specify both `AudioParams` and `VideoParams` to publish both audio and video, and specify only `AudioParams` to publish audio only. You cannot switch between the two modes during the relaying process. For `VideoParams`, set `Width`, `Height`, `Fps`, `Bitrate`, and `Gop` according to the actual settings used for publishing.\n5. The `SequenceNumber` parameter is required when you call `UpdatePublishCdnStream` to change the relaying parameters. It ensures that multiple requests for the same relaying task are in the correct order. The value of `SequenceNumber` increases each time a new request is made for the same task. If `InternalError` is returned, try again using the same `SequenceNumber`. You don’t need to handle the `FailedOperation.OutdateRequest` error.\n6. You can create a relay task before anchors enter a room, in which case you need to manually call `StopPublishCdnStream` to stop the task. If you don’t, after all the users whose streams are mixed leave the room, the TRTC backend will wait for the timeout period (`AgentParams.MaxIdleTime`) to elapse before stopping the relaying task.",
      "input": "StartPublishCdnStreamRequest",
      "name": "Starts a relaying task",
      "output": "StartPublishCdnStreamResponse",
      "status": "online"
    },
    "StopPublishCdnStream": {
      "document": "This API is used to stop a relaying task.",
      "input": "StopPublishCdnStreamRequest",
      "name": "Stops a relaying task",
      "output": "StopPublishCdnStreamResponse",
      "status": "online"
    },
    "UpdatePublishCdnStream": {
      "document": "This API is used to change the parameters of a relaying task.\nNote: For details about how to use this API, see the `StartPublishCdnStream` document.",
      "input": "UpdatePublishCdnStreamRequest",
      "name": "Changes relaying parameters",
      "output": "UpdatePublishCdnStreamResponse",
      "status": "online"
    }
  },
  "metadata": {
    "apiVersion": "2019-07-22",
    "serviceNameCN": "实时音视频",
    "serviceShortName": "trtc"
  },
  "objects": {
    "AgentParams": {
      "document": "The information of the relaying robot in the room.",
      "members": [
        {
          "default": "",
          "document": "The [user ID](https://intl.cloud.tencent.com/document/product/647/37714) of the relaying robot in the TRTC room, which cannot be the same as a user ID already in use. We recommend you include the room ID in this user ID.",
          "example": "room_1234_rtmp_1",
          "member": "string",
          "name": "UserId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The signature (similar to a login password) required for the relaying robot to enter the room. For information on how to calculate the signature, see [What is UserSig?](https://intl.cloud.tencent.com/document/product/647/38104). |",
          "example": "xxxx",
          "member": "string",
          "name": "UserSig",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The timeout period (seconds) for relaying to stop automatically after all the users whose streams are mixed leave the room. The value cannot be smaller than 5 or larger than 86400 (24 hours). Default value: 30.",
          "example": "50",
          "member": "uint64",
          "name": "MaxIdleTime",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "AudioEncode": {
      "document": "The audio encoding parameters.",
      "members": [
        {
          "default": "",
          "document": "The audio sample rate (Hz). Valid values: 48000, 44100, 32000, 24000, 16000, 8000.",
          "example": "48000",
          "member": "uint64",
          "name": "SampleRate",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The number of sound channels. Valid values: 1 (mono), 2 (dual).",
          "example": "2",
          "member": "uint64",
          "name": "Channel",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The audio bitrate (Kbps). Value range: 8-500.",
          "example": "64",
          "member": "uint64",
          "name": "BitRate",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The audio codec. Valid values: 0 (LC-AAC), 1 (HE-AAC), 2 (HE-AACv2). The default value is 0. If this parameter is set to 2, `Channel` must be 2. If it is set to 1 or 2, `SampleRate` can only be 48000, 44100, 32000, 24000, or 16000.",
          "example": "0",
          "member": "uint64",
          "name": "Codec",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "AudioParams": {
      "document": "The audio transcoding parameters for recording.",
      "members": [
        {
          "default": "",
          "document": "The audio sample rate.\n1: 48000 Hz (default)\n2: 44100 Hz\n3: 16000 Hz",
          "example": "1",
          "member": "uint64",
          "name": "SampleRate",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The number of sound channels.\n1: Mono-channel\n2: Dual-channel (default)",
          "example": "2",
          "member": "uint64",
          "name": "Channel",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The audio bitrate (bps). Value range: [32000, 128000]. Default: 64000.",
          "example": "64000",
          "member": "uint64",
          "name": "BitRate",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "CloudStorage": {
      "document": "The cloud storage information.",
      "members": [
        {
          "default": "",
          "document": "The cloud storage provider.\n0: Tencent Cloud COS. The storage services of other providers are not supported currently.",
          "example": "1",
          "member": "uint64",
          "name": "Vendor",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The region of cloud storage.",
          "example": "cn-shanghai-1",
          "member": "string",
          "name": "Region",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The storage bucket.",
          "example": "test-bucket",
          "member": "string",
          "name": "Bucket",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The access_key of the cloud storage account.",
          "example": "test-accesskey",
          "member": "string",
          "name": "AccessKey",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The secret_key of the cloud storage account.",
          "example": "test-secretkey",
          "member": "string",
          "name": "SecretKey",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The bucket to save data, which is an array of strings that can contain letters (a-z and A-Z), numbers (0-9), underscores (_), and hyphens (-). For example, if the value of this parameter is `[\"prefix1\", \"prefix2\"]`, the recording file `xxx.m3u8` will be saved as `prefix1/prefix2/TaskId/xxx.m3u8`.",
          "example": "[\"prefix1\", \"prefix2\"]",
          "member": "string",
          "name": "FileNamePrefix",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "CloudVod": {
      "document": "The VOD parameters.",
      "members": [
        {
          "default": "",
          "document": "The Tencent Cloud VOD parameters.",
          "example": "无",
          "member": "TencentVod",
          "name": "TencentVod",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "CreateCloudRecordingRequest": {
      "document": "CreateCloudRecording request structure.",
      "members": [
        {
          "default": "",
          "document": "The [SDKAppID](https://intl.cloud.tencent.com/document/product/647/37714) of the TRTC room whose streams are recorded.",
          "example": "1234",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The [room ID](https://intl.cloud.tencent.com/document/product/647/37714) of the TRTC room whose streams are recorded.",
          "example": "1234",
          "member": "string",
          "name": "RoomId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "The [user ID](https://www.tencentcloud.com/document/product/647/37714#userid) of the recording robot in the TRTC room, which cannot be identical to the user IDs of anchors in the room or other recording robots. To distinguish this user ID from others, we recommend you include the room ID in the user ID.",
          "example": "recorder_1234",
          "member": "string",
          "name": "UserId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "The signature (similar to a login password) required for the recording robot to enter the room. Each user ID corresponds to a signature. For information on how to calculate the signature, see [What is UserSig?](https://intl.cloud.tencent.com/document/product/647/38104).",
          "example": "recorder_1234_sig",
          "member": "string",
          "name": "UserSig",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "The on-cloud recording parameters.",
          "example": "无",
          "member": "RecordParams",
          "name": "RecordParams",
          "required": true,
          "type": "object"
        },
        {
          "default": "",
          "document": "The cloud storage information of the recording file. Currently, you can only save recording files to Tencent Cloud VOD.",
          "example": "无",
          "member": "StorageParams",
          "name": "StorageParams",
          "required": true,
          "type": "object"
        },
        {
          "default": "",
          "document": "The type of the TRTC room ID, which must be the same as the ID type of the room whose streams are recorded.\n0: String\n1: 32-bit integer (default)",
          "example": "1",
          "member": "uint64",
          "name": "RoomIdType",
          "required": false,
          "type": "int"
        },
        {
          "default": "",
          "document": "The stream mixing parameters, which are valid if the mixed-stream recording mode is used.",
          "example": "无",
          "member": "MixTranscodeParams",
          "name": "MixTranscodeParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The layout parameters, which are valid if the mixed-stream recording mode is used.",
          "example": "无",
          "member": "MixLayoutParams",
          "name": "MixLayoutParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The amount of time (in hours) during which API requests can be made after recording starts. Calculation starts when a recording task is started (when the recording task ID is returned). Once the period elapses, the query, modification, and stop recording APIs can no longer be called, but the recording task will continue. The default value is `72` (three days), and the maximum and minimum values allowed are `720` (30 days) and `6` respectively. If you do not set this parameter, the query, modification, and stop recording APIs can be called within 72 hours after recording starts.",
          "example": "无",
          "member": "uint64",
          "name": "ResourceExpiredHour",
          "required": false,
          "type": "int"
        },
        {
          "default": "",
          "document": "The permission ticket for a TRTC room. This parameter is required if advanced permission control is enabled in the console, in which case the TRTC backend will verify users’ [PrivateMapKey](https://intl.cloud.tencent.com/document/product/647/32240?from_cn_redirect=1), which include an encrypted room ID and permission bit list. A user providing only `UserSig` and not `PrivateMapKey` will be unable to enter the room.",
          "example": "无",
          "member": "string",
          "name": "PrivateMapKey",
          "required": false,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "CreateCloudRecordingResponse": {
      "document": "CreateCloudRecording response structure.",
      "members": [
        {
          "document": "The task ID assigned by the recording service, which uniquely identifies a recording process and becomes invalid after a recording task ends. After a recording task starts, if you want to perform other actions on the task, you need to specify the task ID when making API requests.",
          "example": "test",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteCloudRecordingRequest": {
      "document": "DeleteCloudRecording request structure.",
      "members": [
        {
          "default": "",
          "document": "The `SDKAppID` of the room whose streams are recorded.",
          "example": "1234",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The unique ID of the recording task, which is returned after recording starts successfully.",
          "example": "1234",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DeleteCloudRecordingResponse": {
      "document": "DeleteCloudRecording response structure.",
      "members": [
        {
          "document": "The task ID assigned by the recording service, which uniquely identifies a recording process and becomes invalid after a recording task ends.",
          "example": "1234",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeCloudRecordingRequest": {
      "document": "DescribeCloudRecording request structure.",
      "members": [
        {
          "default": "",
          "document": "The `SDKAppID` of the room whose streams are recorded.",
          "example": "1234",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The unique ID of the recording task, which is returned after recording starts successfully.",
          "example": "123",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DescribeCloudRecordingResponse": {
      "document": "DescribeCloudRecording response structure.",
      "members": [
        {
          "document": "The unique ID of the recording task.",
          "example": "123",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The status of the on-cloud recording task.\nIdle: The task is idle.\nInProgress: The task is in progress.\nExited: The task is being ended.",
          "example": "InProgress",
          "member": "string",
          "name": "Status",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The information of the recording files.\nNote: This field may return `null`, indicating that no valid values can be obtained.",
          "example": "无",
          "member": "StorageFile",
          "name": "StorageFileList",
          "required": true,
          "type": "list",
          "value_allowed_null": true
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DismissRoomByStrRoomIdRequest": {
      "document": "DismissRoomByStrRoomId request structure.",
      "members": [
        {
          "default": "",
          "document": "`SDKAppId` of TRTC",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "Room ID",
          "member": "string",
          "name": "RoomId",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DismissRoomByStrRoomIdResponse": {
      "document": "DismissRoomByStrRoomId response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "DismissRoomRequest": {
      "document": "DismissRoom request structure.",
      "members": [
        {
          "default": "",
          "document": "`SDKAppId` of TRTC.",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "Room number.",
          "member": "uint64",
          "name": "RoomId",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "DismissRoomResponse": {
      "document": "DismissRoom response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "MaxVideoUser": {
      "document": "The information of the large video in screen sharing or floating layout mode.",
      "members": [
        {
          "default": "",
          "document": "The stream information.",
          "example": "UserMediaStream",
          "member": "UserMediaStream",
          "name": "UserMediaStream",
          "required": true,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuAudioParams": {
      "document": "The audio parameters for relaying.",
      "members": [
        {
          "default": "",
          "document": "The audio encoding parameters.",
          "example": "AudioEncode",
          "member": "AudioEncode",
          "name": "AudioEncode",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The audio mix allowlist. For the `StartPublishCdnStream` API, if you do not pass this parameter or leave it empty, the audios of all anchors will be mixed. For the `UpdatePublishCdnStream` API, if you do not pass this parameter, no changes will be made to the current allowlist; if you pass in an empty string, the audios of all anchors will be mixed.\nIn cases where `SubscribeAudioList` and `UnSubscribeAudioList` are used at the same time, you need to specify both parameters. If you pass neither `SubscribeAudioList` nor `UnSubscribeAudioList`, no changes will be made. If a user is included in both parameters, the user’s audio will not be mixed.",
          "example": "SubscribeAudioList",
          "member": "McuUserInfoParams",
          "name": "SubscribeAudioList",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The audio mix blocklist. If you do not pass this parameter or leave it empty, there won’t be a blocklist. For the `UpdatePublishCdnStream` API, if you do not pass this parameter, no changes will be made to the current blocklist; if you pass in an empty string, the blocklist will be reset.\nIn cases where `SubscribeAudioList` and `UnSubscribeAudioList` are used at the same time, you need to specify both parameters. If you pass neither `SubscribeAudioList` nor `UnSubscribeAudioList`, no changes will be made. If a user is included in both parameters, the user’s audio will not be mixed.",
          "example": "UnSubscribeAudioList",
          "member": "McuUserInfoParams",
          "name": "UnSubscribeAudioList",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuCustomCrop": {
      "document": "The cropping parameters for mixed videos.",
      "members": [
        {
          "default": "",
          "document": "The horizontal offset (pixels) of the starting point for cropping. This parameter must be greater than 0.",
          "example": "0",
          "member": "uint64",
          "name": "LocationX",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The vertical offset (pixels) of the starting point for cropping. This parameter must be greater than 0.",
          "example": "0",
          "member": "uint64",
          "name": "LocationY",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The video width (pixels) after cropping. The sum of this parameter and `LocationX` cannot be greater than 10000.",
          "example": "168",
          "member": "uint64",
          "name": "Width",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The video height (pixels) after cropping. The sum of this parameter and `LocationY` cannot be greater than 10000.",
          "example": "168",
          "member": "uint64",
          "name": "Height",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuFeedBackRoomParams": {
      "document": "Parameters for relaying to a TRTC room.",
      "members": [
        {
          "default": "",
          "document": "The room ID.",
          "example": "room_1234",
          "member": "string",
          "name": "RoomId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The ID type of the room to which streams are relayed. `0` indicates integer, and `1` indicates string.",
          "example": "1",
          "member": "uint64",
          "name": "RoomIdType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The [user ID](https://intl.cloud.tencent.com/document/product/647/37714) of the relaying robot in the TRTC room, which cannot be the same as a user ID already in use. We recommend you include the room ID in this user ID.",
          "example": "room_1234_push_1",
          "member": "string",
          "name": "UserId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The signature (similar to login password) required for the relaying robot to enter the room. For information on how to calculate the signature, see [What is UserSig?](https://intl.cloud.tencent.com/document/product/647/38104).",
          "example": "xxxx",
          "member": "string",
          "name": "UserSig",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuLayout": {
      "document": "The layout parameters.",
      "members": [
        {
          "default": "",
          "document": "The information of the stream that is displayed. If you do not pass this parameter, TRTC will display the videos of anchors in the room according to their room entry sequence.",
          "example": "UserMediaStream",
          "member": "UserMediaStream",
          "name": "UserMediaStream",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The video width (pixels). If you do not pass this parameter, 0 will be used.",
          "example": "1280",
          "member": "uint64",
          "name": "ImageWidth",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The video height (pixels). If you do not pass this parameter, 0 will be used.",
          "example": "720",
          "member": "uint64",
          "name": "ImageHeight",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The horizontal offset (pixels) of the video. The sum of `LocationX` and `ImageWidth` cannot exceed the width of the canvas. If you do not pass this parameter, 0 will be used.",
          "example": "0",
          "member": "uint64",
          "name": "LocationX",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The vertical offset of the video. The sum of `LocationY` and `ImageHeight` cannot exceed the height of the canvas. If you do not pass this parameter, 0 will be used.",
          "example": "0",
          "member": "uint64",
          "name": "LocationY",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The image layer of the video. If you do not pass this parameter, 0 will be used.",
          "example": "0",
          "member": "uint64",
          "name": "ZOrder",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The rendering mode of the video. 0 (the video is scaled and the excess parts are cropped), 1 (the video is scaled), 2 (the video is scaled and the blank spaces are filled with black bars). If you do not pass this parameter, 0 will be used.",
          "example": "0",
          "member": "uint64",
          "name": "RenderMode",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The background color of the video. Below are the values for some common colors:\nRed: 0xcc0033\nYellow: 0xcc9900\nGreen: 0xcccc33\nBlue: 0x99CCFF\nBlack: 0x000000\nWhite: 0xFFFFFF\nGrey: 0x999999",
          "example": "0xFFFFFF",
          "member": "string",
          "name": "BackGroundColor",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The URL of the background image for the video. This parameter allows you to specify an image to display when the user’s camera is turned off or before the user enters the room. If the dimensions of the image specified are different from those of the video window, the image will be stretched to fit the space. This parameter has a higher priority than `BackGroundColor`.",
          "example": "xxxx",
          "member": "string",
          "name": "BackgroundImageUrl",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "Custom cropping.",
          "example": "xxx",
          "member": "McuCustomCrop",
          "name": "CustomCrop",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuLayoutParams": {
      "document": "The layout parameters.",
      "members": [
        {
          "default": "",
          "document": "The layout mode. Valid values: 1 (floating), 2 (screen sharing), 3 (grid), 4 (custom). Floating, screen sharing, and grid are dynamic layouts. Custom layouts are static layouts.",
          "example": "4",
          "member": "uint64",
          "name": "MixLayoutMode",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "Whether to display users who publish only audio. 0: No; 1: Yes. This parameter is valid only if a dynamic layout is used. If you do not pass this parameter, 0 will be used.",
          "example": "0",
          "member": "uint64",
          "name": "PureAudioHoldPlaceMode",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The details of a custom layout.",
          "example": "MixLayoutList",
          "member": "McuLayout",
          "name": "MixLayoutList",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The information of the large video in screen sharing or floating layout mode.",
          "example": "MaxVideoUser",
          "member": "MaxVideoUser",
          "name": "MaxVideoUser",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuLayoutVolume": {
      "document": "The SEI parameters for audio volume layout. You can specify the `AppData` and `PayloadType`.\nThis parameter may be empty, in which case the default SEI parameters for audio volume layout will be used.",
      "members": [
        {
          "default": "",
          "document": "The application data, which will be embedded in the `app_data` field of the custom SEI. It must be shorter than 4,096 characters.",
          "example": "xxxx",
          "member": "string",
          "name": "AppData",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The payload type of the SEI message. The default is 100. Value range: 100-254 (244 is used internally by Tencent Cloud for timestamps).",
          "example": "100",
          "member": "uint64",
          "name": "PayloadType",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuPassThrough": {
      "document": "The custom pass-through SEI.",
      "members": [
        {
          "default": "",
          "document": "The payload of the pass-through SEI.",
          "example": "xxxx",
          "member": "string",
          "name": "PayloadContent",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The payload type of the SEI message. Value range: 5 and 100-254 (244 is used internally by Tencent Cloud for timestamps).",
          "example": "101",
          "member": "uint64",
          "name": "PayloadType",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "This parameter is required only if `PayloadType` is 5. It must be a 32-character hexadecimal string. If `PayloadType` is not 5, this parameter will be ignored.",
          "example": "xxxx",
          "member": "string",
          "name": "PayloadUuid",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuPublishCdnParam": {
      "document": "The relaying parameters.",
      "members": [
        {
          "default": "",
          "document": "The URLs of the CDNs to relay to.",
          "example": "xxxx",
          "member": "string",
          "name": "PublishCdnUrl",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "Whether to relay to Tencent Cloud’s CDN. `0`: Third-party CDN; `1` (default): Tencent Cloud’s CDN. Relaying to a third-party CDN will incur fees. To avoid unexpected charges, we recommend you pass in a specific value. For details, see the API document.",
          "example": "1",
          "member": "uint64",
          "name": "IsTencentCdn",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuSeiParams": {
      "document": "The stream mixing SEI parameters.",
      "members": [
        {
          "default": "",
          "document": "The audio volume layout SEI.",
          "example": "LayoutVolume",
          "member": "McuLayoutVolume",
          "name": "LayoutVolume",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The pass-through SEI.",
          "example": "PassThrough",
          "member": "McuPassThrough",
          "name": "PassThrough",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuUserInfoParams": {
      "document": "The users whose streams are mixed.",
      "members": [
        {
          "default": "",
          "document": "The user information.",
          "example": "UserInfo",
          "member": "MixUserInfo",
          "name": "UserInfo",
          "required": true,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuVideoParams": {
      "document": "The video parameters for relaying.",
      "members": [
        {
          "default": "",
          "document": "The video encoding parameters.",
          "example": "VideoEncode",
          "member": "VideoEncode",
          "name": "VideoEncode",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The layout parameters.",
          "example": "LayoutParams",
          "member": "McuLayoutParams",
          "name": "LayoutParams",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The canvas color. Below are the values for some common colors:\nRed: 0xcc0033\nYellow: 0xcc9900\nGreen: 0xcccc33\nBlue: 0x99CCFF\nBlack: 0x000000\nWhite: 0xFFFFFF\nGrey: 0x999999",
          "example": "0xFFFFFF",
          "member": "string",
          "name": "BackGroundColor",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The URL of the background image for the canvas. This parameter has a higher priority than `BackGroundColor`.",
          "example": "xxxx",
          "member": "string",
          "name": "BackgroundImageUrl",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The watermark information for the mixed stream.",
          "example": "WaterMarkList",
          "member": "McuWaterMarkParams",
          "name": "WaterMarkList",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuWaterMarkImage": {
      "document": "The information of the watermark image.",
      "members": [
        {
          "default": "",
          "document": "The URL of the watermark image, which must be in PNG, JPG, or JPEG format and cannot exceed 5 MB.",
          "example": "xxx.png",
          "member": "string",
          "name": "WaterMarkUrl",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The watermark width (pixels).",
          "example": "64",
          "member": "uint64",
          "name": "WaterMarkWidth",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The watermark height (pixels).",
          "example": "64",
          "member": "uint64",
          "name": "WaterMarkHeight",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The horizontal offset (pixels) of the watermark.",
          "example": "0",
          "member": "uint64",
          "name": "LocationX",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The vertical offset (pixels) of the watermark.",
          "example": "0",
          "member": "uint64",
          "name": "LocationY",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The image layer of the watermark. If you do not pass this parameter, 0 will be used.",
          "example": "0",
          "member": "uint64",
          "name": "ZOrder",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "McuWaterMarkParams": {
      "document": "The Watermark information.",
      "members": [
        {
          "default": "",
          "document": "The watermark type. The default is 0, which indicates an image watermark.",
          "example": "0",
          "member": "uint64",
          "name": "WaterMarkType",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The watermark image information. This parameter is required if `WaterMarkType` is 0.",
          "example": "WaterMarkImage",
          "member": "McuWaterMarkImage",
          "name": "WaterMarkImage",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "MixLayout": {
      "document": "The custom layout parameters.",
      "members": [
        {
          "default": "",
          "document": "The Y axis of the window’s top-left corner. Value range: [0, 1920]. The value cannot be larger than the canvas height.",
          "example": "100",
          "member": "uint64",
          "name": "Top",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The X axis of the window’s top-left corner. Value range: [0, 1920]. The value cannot be larger than the canvas width.",
          "example": "100",
          "member": "uint64",
          "name": "Left",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The relative width of the window. Value range: [0, 1920]. The sum of the values of this parameter and `Left` cannot exceed the canvas width.",
          "example": "100",
          "member": "uint64",
          "name": "Width",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The relative height of the window. Value range: [0, 1920]. The sum of the values of this parameter and `Top` cannot exceed the canvas height.",
          "example": "100",
          "member": "uint64",
          "name": "Height",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The user ID (string) of the anchor whose video is shown in the window. If you do not set this parameter, anchors’ videos will be shown in their room entry sequence.",
          "example": "123",
          "member": "string",
          "name": "UserId",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The degree of transparency of the canvas. Value range: [0, 255]. 0 means fully opaque, and 255 means fully transparent.",
          "example": "100",
          "member": "uint64",
          "name": "Alpha",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "0: Stretch. In this mode, the image is stretched to fill the space available. The whole image is visible after scaling. However, if the original aspect ratio is different from the target, the image may be distorted.\n\n1: Crop (default). In this mode, if the original aspect ratio is different from the target, the image will be cropped according to the target before being stretched to fill the space available. The image will not be distorted.\n\n2: Blank. This mode stretches the image while keeping its original aspect ratio. If the original aspect ratio is different from the target, there may be blank spaces to the top and bottom or to the left and right of the window.\n\n3: Smart stretch. This mode is similar to the crop mode, except that it restricts cropping to 20% of the image’s width or height at most.",
          "example": "1",
          "member": "uint64",
          "name": "RenderMode",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The type of the stream subscribed to.\n0: Primary stream (default)\n1: Substream",
          "example": "1",
          "member": "uint64",
          "name": "MediaId",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The image layer. 0 is the default value and means the bottommost layer.",
          "example": "2",
          "member": "uint64",
          "name": "ImageLayer",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The download URL of the background image for a window. The image must be in JPG or PNG format and cannot be larger than 5 MB. If the image’s aspect ratio is different from that of the window, the image will be rendered according to the value of `RenderMode`.",
          "example": "https://xxxx",
          "member": "string",
          "name": "SubBackgroundImage",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "MixLayoutParams": {
      "document": "The layout parameters for mixed-stream recording.\n",
      "members": [
        {
          "default": "",
          "document": "Layout mode:\n1: Floating\n2: Screen sharing\n3: Grid (default)\n4: Custom\n\nFloating: By default, the video of the first anchor (you can also specify an anchor) who enters the room is scaled to fill the screen. When other anchors enter the room, their videos appear smaller and are superimposed over the large video from left to right starting from the bottom of the canvas according to their room entry sequence. If the total number of videos is 17 or less, there will be four windows in each row (4 x 4); if it is greater than 17, there will be five windows in each row (5 x 5). Up to 25 videos can be displayed. A user who publishes only audio will still be displayed in one window.\n\nScreen sharing: The video of a specified anchor occupies a larger part of the canvas on the left side (if you do not specify an anchor, the left window will display the canvas background). The videos of other anchors are smaller and are positioned on the right side. If the total number of videos is 17 or less, the small videos are positioned from top to bottom in up to two columns on the right side, with eight videos per column at most. If there are more than 17 videos, the additional videos are positioned at the bottom of the canvas from left to right. Up to 25 videos can be displayed. A user who publishes only audio will still be displayed in one window.\n\nGrid: The videos of anchors are scaled and positioned automatically according to the total number of anchors in a room. Each video has the same size. Up to 25 videos can be displayed.\n\nCustom: Specify the layout of videos by using the `MixLayoutList` parameter.",
          "example": "3",
          "member": "uint64",
          "name": "MixLayoutMode",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The custom layout details. This parameter is valid if `MixLayoutMode` is set to `4`. Up to 25 videos can be displayed.",
          "example": "无",
          "member": "MixLayout",
          "name": "MixLayoutList",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The background color, which is a hexadecimal value (starting with \"#\", followed by the color value) converted from an 8-bit RGB value. For example, the RGB value of orange is `R:255 G:165 B:0`, and its hexadecimal value is `#FFA500`. The default color is black.",
          "example": "123",
          "member": "string",
          "name": "BackGroundColor",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The user whose video is displayed in the big window. This parameter is valid if `MixLayoutMode` is set to `1` (floating) or `2` (screen sharing). If it is left empty, the first anchor entering the room is displayed in the big window in the floating mode and the canvas background is displayed in the screen sharing mode.",
          "example": "123",
          "member": "string",
          "name": "MaxResolutionUserId",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The stream type.\n0: Primary stream (default)\n1: Substream (screen sharing stream)\nThis parameter specifies the type of the stream displayed in the big window. If it appears in `MixLayoutList`, it indicates the type of the stream of a specified user.",
          "example": "0",
          "member": "uint64",
          "name": "MediaId",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The download URL of the background image for the canvas, which must be in JPG or PNG format and cannot be larger than 5 MB.",
          "example": "https://xxxx",
          "member": "string",
          "name": "BackgroundImageUrl",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "`1` means to use placeholders, and `0` (default) means to not use placeholders. If this parameter is set to `1`, when a user is not publishing video, a placeholder image will be displayed in the window reserved for the user.",
          "example": "0",
          "member": "uint64",
          "name": "PlaceHolderMode",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The render mode to use when the aspect ratio of a video is different from that of the window. This parameter is defined the same as `RenderMode` in `MixLayoufList`.",
          "example": "1",
          "member": "uint64",
          "name": "BackgroundImageRenderMode",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The URL of the background image for a window. The image must be in JPG or PNG format and cannot be larger than 5 MB. If the image’s aspect ratio is different from that of the window, the image will be rendered according to the value of `RenderMode`.",
          "example": "https://xxxx",
          "member": "string",
          "name": "DefaultSubBackgroundImage",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The watermark layout. Up to 25 watermarks are supported.",
          "example": "无",
          "member": "WaterMark",
          "name": "WaterMarkList",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The render mode to use when the aspect ratio of a video is different from that of the window. This parameter is invalid if a custom layout is used. It is defined the same as `RenderMode` in `MixLayoufList`.",
          "example": "1",
          "member": "uint64",
          "name": "RenderMode",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "This parameter is valid only if the screen sharing layout is used. If you set it to `1`, the large video window will appear on the right and the small window on the left. The default value is `0`.",
          "example": "0",
          "member": "uint64",
          "name": "MaxResolutionUserAlign",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "MixTranscodeParams": {
      "document": "The audio and video parameters for recording.",
      "members": [
        {
          "default": "",
          "document": "The video transcoding parameters for recording. If you set this parameter, you must specify all its fields. If you do not set it, the default will be used.",
          "example": "无",
          "member": "VideoParams",
          "name": "VideoParams",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The audio transcoding parameters for recording. If you set this parameter, you must specify all its fields. If you do not set it, the default will be used.",
          "example": "无",
          "member": "AudioParams",
          "name": "AudioParams",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "MixUserInfo": {
      "document": "The user information.",
      "members": [
        {
          "default": "",
          "document": "User ID.",
          "example": "owen-test",
          "member": "string",
          "name": "UserId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "If a dynamic layout is used, the value of this parameter should be the ID of the main room. If a custom layout is used, the value of this parameter should be the same as the room ID in `MixLayoutList`.",
          "example": "room_1234",
          "member": "string",
          "name": "RoomId",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The type of the `RoomId` parameter. 0: integer; 1: string.",
          "example": "1",
          "member": "uint64",
          "name": "RoomIdType",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "ModifyCloudRecordingRequest": {
      "document": "ModifyCloudRecording request structure.",
      "members": [
        {
          "default": "",
          "document": "The `SDKAppID` of the room whose streams are recorded.",
          "example": "1234",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The unique ID of the recording task, which is returned after recording starts successfully.",
          "example": "1234",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "The new stream mixing layout to use.",
          "example": "无",
          "member": "MixLayoutParams",
          "name": "MixLayoutParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The allowlist/blocklist for stream subscription.",
          "example": "无",
          "member": "SubscribeStreamUserIds",
          "name": "SubscribeStreamUserIds",
          "required": false,
          "type": "object"
        }
      ],
      "type": "object"
    },
    "ModifyCloudRecordingResponse": {
      "document": "ModifyCloudRecording response structure.",
      "members": [
        {
          "document": "The task ID assigned by the recording service, which uniquely identifies a recording process and becomes invalid after a recording task ends.",
          "example": "1234",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "RecordParams": {
      "document": "The on-cloud recording parameters.",
      "members": [
        {
          "default": "",
          "document": "The recording mode.\n1: Single-stream recording. Records the audio and video of each subscribed user (`UserId`) in a room and saves the recording files to the cloud.\n2: Mixed-stream recording. Mixes the audios and videos of subscribed users (`UserId`) in a room, records the mixed stream, and saves the recording files to the cloud.",
          "example": "1",
          "member": "uint64",
          "name": "RecordMode",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The time period (seconds) to wait to automatically stop recording after there are no anchors (users who publish streams) in a room. Value range: 5-86400 (max 24 hours). Default value: 30.",
          "example": "30",
          "member": "uint64",
          "name": "MaxIdleTime",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The media type of the streams to record.\n0: Audio and video streams (default)\n1: Audio streams only\n2: Video streams only",
          "example": "3",
          "member": "uint64",
          "name": "StreamType",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The allowlist/blocklist for stream subscription.",
          "example": "无",
          "member": "SubscribeStreamUserIds",
          "name": "SubscribeStreamUserIds",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The output format. `0` (default): HLS; `1`: HLS + MP4; `2`: HLS + AAC. This parameter is invalid if you save recording files to VOD. To specify the format of files saved to VOD, use `MediaType` of `TencentVod`.",
          "example": "0",
          "member": "uint64",
          "name": "OutputFormat",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "Whether to merge the audio and video of a user in the single-stream recording mode. 0 (default): Do not mix the audio and video; 1: Mix the audio and video into one TS file. You don’t need to specify this parameter for mixed-stream recording, which merges audios and videos by default.",
          "example": "0",
          "member": "uint64",
          "name": "AvMerge",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The maximum file duration allowed (minutes). If the output format is AAC or MP4, and the maximum file duration is exceeded, the file will be segmented. Value range: 1-1440. Default value: 1440 (24 hours). The maximum file size allowed is 2 GB. If the file size exceeds 2 GB, or the file duration exceeds 24 hours, the file will also be segmented.\nThis parameter is invalid if the output format is HLS.",
          "example": "1440",
          "member": "uint64",
          "name": "MaxMediaFileDuration",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "RemoveUserByStrRoomIdRequest": {
      "document": "RemoveUserByStrRoomId request structure.",
      "members": [
        {
          "default": "",
          "document": "`SDKAppId` of TRTC",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "Room ID",
          "member": "string",
          "name": "RoomId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "List of up to 10 users to be removed",
          "member": "string",
          "name": "UserIds",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "RemoveUserByStrRoomIdResponse": {
      "document": "RemoveUserByStrRoomId response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "RemoveUserRequest": {
      "document": "RemoveUser request structure.",
      "members": [
        {
          "default": "",
          "document": "`SDKAppId` of TRTC.",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "Room number.",
          "member": "uint64",
          "name": "RoomId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "List of up to 10 users to be removed.",
          "member": "string",
          "name": "UserIds",
          "required": true,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "RemoveUserResponse": {
      "document": "RemoveUser response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "SetUserBlockedByStrRoomIdRequest": {
      "document": "SetUserBlockedByStrRoomId request structure.",
      "members": [
        {
          "default": "",
          "document": "The application ID.",
          "example": "14001xxxxx",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The room ID (string).",
          "example": "abdd",
          "member": "string",
          "name": "StrRoomId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "The user ID.",
          "example": "aaaa",
          "member": "string",
          "name": "UserId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "Whether to disable the user’s audio and video. 0: Enable; 1: Disable.",
          "example": "1",
          "member": "uint64",
          "name": "IsMute",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "SetUserBlockedByStrRoomIdResponse": {
      "document": "SetUserBlockedByStrRoomId response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "SetUserBlockedRequest": {
      "document": "SetUserBlocked request structure.",
      "members": [
        {
          "default": "",
          "document": "The application ID.",
          "example": "14001xxxxx",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The room ID (number).",
          "example": "1111",
          "member": "uint64",
          "name": "RoomId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The user ID.",
          "example": "aaaa",
          "member": "string",
          "name": "UserId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "Whether to disable the user’s audio and video. 0: Enable; 1: Disable.",
          "example": "1",
          "member": "uint64",
          "name": "IsMute",
          "required": true,
          "type": "int"
        }
      ],
      "type": "object"
    },
    "SetUserBlockedResponse": {
      "document": "SetUserBlocked response structure.",
      "members": [
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "SingleSubscribeParams": {
      "document": "The information of a single stream relayed.",
      "members": [
        {
          "default": "",
          "document": "The stream information.",
          "example": "UserMediaStream",
          "member": "UserMediaStream",
          "name": "UserMediaStream",
          "required": true,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "StartPublishCdnStreamRequest": {
      "document": "StartPublishCdnStream request structure.",
      "members": [
        {
          "default": "",
          "document": "The [SDKAppID](https://intl.cloud.tencent.com/document/product/647/37714) of the TRTC room whose streams are relayed.",
          "example": "1400188366",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The ID of the room whose streams are relayed (the main room).",
          "example": "room_1234",
          "member": "string",
          "name": "RoomId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "The type of the `RoomId` parameter, which must be the same as the ID type of the room whose streams are relayed. 0: integer; 1: string.",
          "example": "1",
          "member": "uint64",
          "name": "RoomIdType",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The information of the relaying robot in the room.",
          "example": "AgentParams",
          "member": "AgentParams",
          "name": "AgentParams",
          "required": true,
          "type": "object"
        },
        {
          "default": "",
          "document": "Whether to transcode the streams. 0: No; 1: Yes.",
          "example": "1",
          "member": "uint64",
          "name": "WithTranscoding",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The audio encoding parameters for relaying.",
          "example": "AudioParams",
          "member": "McuAudioParams",
          "name": "AudioParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The video encoding parameters for relaying. If you do not pass this parameter, only audio will be relayed.",
          "example": "VideoParams",
          "member": "McuVideoParams",
          "name": "VideoParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The information of a single stream relayed. When you relay a single stream, set `WithTranscoding` to 0.",
          "example": "SingleSubscribeParams",
          "member": "SingleSubscribeParams",
          "name": "SingleSubscribeParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The CDN information.",
          "example": "PublishCdnParams",
          "member": "McuPublishCdnParam",
          "name": "PublishCdnParams",
          "required": false,
          "type": "list"
        },
        {
          "default": "",
          "document": "The stream mixing SEI parameters.",
          "example": "SeiParams",
          "member": "McuSeiParams",
          "name": "SeiParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The information of the room to which streams are relayed.",
          "example": "FeedBackRoomParams",
          "member": "McuFeedBackRoomParams",
          "name": "FeedBackRoomParams",
          "required": false,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "StartPublishCdnStreamResponse": {
      "document": "StartPublishCdnStream response structure.",
      "members": [
        {
          "document": "The task ID, which is generated by the Tencent Cloud server. You need to pass in the task ID when making a request to update or stop a relaying task.",
          "example": "5df46eb2-8e4b-490e-9c3c-dbd3b84faefc",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "StopPublishCdnStreamRequest": {
      "document": "StopPublishCdnStream request structure.",
      "members": [
        {
          "default": "",
          "document": "The [SDKAppID](https://intl.cloud.tencent.com/document/product/647/37714) of the TRTC room whose streams are relayed.",
          "example": "1400188366",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The task ID.",
          "example": "xxxx",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string"
        }
      ],
      "type": "object"
    },
    "StopPublishCdnStreamResponse": {
      "document": "StopPublishCdnStream response structure.",
      "members": [
        {
          "document": "The task ID.",
          "example": "xxxxx",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "StorageFile": {
      "document": "The information of the recording files, which is returned by the `DescribeCloudRecording` API.",
      "members": [
        {
          "default": "",
          "document": "The user whose stream is recorded into the file. In the mixed-stream recording mode, this parameter will be empty.\nNote: This field may return `null`, indicating that no valid values can be obtained.",
          "example": "123",
          "member": "string",
          "name": "UserId",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "default": "",
          "document": "The filename.",
          "example": "xxx.m3u8",
          "member": "string",
          "name": "FileName",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The type of the media recorded.\nvideo\naudio\naudio_video\nNote: This field may return `null`, indicating that no valid values can be obtained.",
          "example": "audio_video",
          "member": "string",
          "name": "TrackType",
          "required": true,
          "type": "string",
          "value_allowed_null": true
        },
        {
          "default": "",
          "document": "The start time (Unix timestamp) of the recording file.",
          "example": "1562724852626",
          "member": "uint64",
          "name": "BeginTimeStamp",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "out"
    },
    "StorageParams": {
      "document": "The storage parameters.",
      "members": [
        {
          "default": "",
          "document": "The account information for third-party cloud storage. This parameter is not available currently. Please use `CloudVod` instead to save files to Tencent Cloud VOD.",
          "example": "无",
          "member": "CloudStorage",
          "name": "CloudStorage",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The account information for saving files to Tencent Cloud VOD. This parameter is required. Currently, you can only save files to Tencent Cloud VOD.",
          "example": "无",
          "member": "CloudVod",
          "name": "CloudVod",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "SubscribeStreamUserIds": {
      "document": "The subscription allowlist/blocklist. You cannot specify an allowlist and a blocklist for audio/video subscription at the same time. The maximum number of streams one can receive at the same time is 25. When streams are mixed, up to 24 videos are supported. You can use `.*$` to specify user IDs with the same prefix, but make sure there aren’t users whose IDs contain \".*$\" and are exactly the same as the prefix you pass in. If there are, TRTC will only allow or block those users.",
      "members": [
        {
          "default": "",
          "document": "The allowlist for audio subscription. For example, `[\"1\", \"2\", \"3\"]` means to only subscribe to the audios of users 1, 2, and 3, and [\"1.*$\"] means to only subscribe to the audios of users whose ID prefix is `1`. If this parameter is left empty, the audios of all anchors in the room will be received. The array can contain at most 32 elements.",
          "example": "[\"123\",\"456\"]",
          "member": "string",
          "name": "SubscribeAudioUserIds",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The blocklist for audio subscription. For example, `[\"1\", \"2\", \"3\"]` means to not subscribe to the audios of users 1, 2, and 3, and `[\"1.*$\"]` means to not subscribe to users whose ID prefix is `1`. If this parameter is left empty, the audios of all anchors in the room will be received. The array can contain at most 32 elements.",
          "example": "[\"123\",\"456\"]",
          "member": "string",
          "name": "UnSubscribeAudioUserIds",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The allowlist for video subscription. For example, `[\"1\", \"2\", \"3\"]` means to only subscribe to the videos of users 1, 2, and 3, and `[\"1.*$\"]` means to only subscribe to the videos of users whose ID prefix is `1`. If this parameter is left empty, the videos of all anchors in the room will be received. The array can contain at most 32 elements.",
          "example": "[\"123\",\"456\"]",
          "member": "string",
          "name": "SubscribeVideoUserIds",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The blocklist for video subscription. For example, `[\"1\", \"2\", \"3\"]` means to not subscribe to the videos of users 1, 2, and 3, and `[\"1.*$\"]` means to not subscribe to the videos of users whose ID prefix is `1`. If this parameter is left empty, the videos of all anchors in the room will be received. The array can contain at most 32 elements.",
          "example": "[\"123\",\"456\"]",
          "member": "string",
          "name": "UnSubscribeVideoUserIds",
          "required": false,
          "type": "list",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "TencentVod": {
      "document": "The Tencent Cloud VOD parameters.",
      "members": [
        {
          "default": "",
          "document": "The operation to perform on the media uploaded. The value of this parameter is the name of a task flow template. You can create a custom task flow template in Tencent Cloud VOD.",
          "example": "xxx",
          "member": "string",
          "name": "Procedure",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The expiration time of the media file, which is a time period (seconds) from the current time. For example, `86400` means to save the media file for one day. To save the file permanently, set this parameter to `0`.",
          "example": "86400",
          "member": "uint64",
          "name": "ExpireTime",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The storage region. Set this parameter if you have special requirements on the storage region.",
          "example": "ap-shanghai",
          "member": "string",
          "name": "StorageRegion",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The category ID, which is returned after you create a category by calling an API. You can use categories to manage media files.\nThe default value is `0`, which means others.",
          "example": "0",
          "member": "uint64",
          "name": "ClassId",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The VOD subapplication ID. If you need to access a resource in a subapplication, set this parameter to the subapplication ID; otherwise, leave it empty.",
          "example": "0",
          "member": "uint64",
          "name": "SubAppId",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The task flow context, which is passed through after the task is completed.",
          "example": "xxx",
          "member": "string",
          "name": "SessionContext",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The upload context, which is passed through after upload is completed.",
          "example": "xxx",
          "member": "string",
          "name": "SourceContext",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The format of recording files uploaded to VOD. `0` (default): MP4; `1`: HLS; `2`: AAC (valid only if `StreamType` is `1`).",
          "example": "1",
          "member": "uint64",
          "name": "MediaType",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The custom prefix of recording files. This parameter is valid only if recording files are uploaded to VOD. It can contain letters, numbers, underscores, and hyphens and cannot exceed 64 bytes. This prefix and the automatically generated filename are connected with `__UserId_u_`.",
          "example": "xxx",
          "member": "string",
          "name": "UserDefineRecordId",
          "required": false,
          "type": "string",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "UpdatePublishCdnStreamRequest": {
      "document": "UpdatePublishCdnStream request structure.",
      "members": [
        {
          "default": "",
          "document": "The [SDKAppID](https://intl.cloud.tencent.com/document/product/647/37714) of the TRTC room whose streams are relayed.",
          "example": "1400188366",
          "member": "uint64",
          "name": "SdkAppId",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "The task ID.",
          "example": "xxxxxxxx",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string"
        },
        {
          "default": "",
          "document": "The sequence of a request. This parameter ensures the requests to change the parameters of the same relaying task are in the correct order. It increases each time a new request is made.",
          "example": "2",
          "member": "uint64",
          "name": "SequenceNumber",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "Whether to transcode the streams. 0: No; 1: Yes.",
          "example": "1",
          "member": "uint64",
          "name": "WithTranscoding",
          "required": true,
          "type": "int"
        },
        {
          "default": "",
          "document": "Pass this parameter to change the users whose audios are mixed. If you do not pass this parameter, no changes will be made.",
          "example": "AudioParams",
          "member": "McuAudioParams",
          "name": "AudioParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "Pass this parameter to change video parameters other than the codec, including the video layout, background image, background color, and watermark information. This parameter is valid only if streams are transcoded. If you do not pass it, no changes will be made.",
          "example": "VideoParams",
          "member": "McuVideoParams",
          "name": "VideoParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "Pass this parameter to change the single stream that is relayed. This parameter is valid only if streams are not transcoded. If you do not pass this parameter, no changes will be made.",
          "example": "SingleSubscribeParams",
          "member": "SingleSubscribeParams",
          "name": "SingleSubscribeParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "Pass this parameter to change the CDNs to relay to. If you do not pass this parameter, no changes will be made.",
          "example": "PublishCdnParams",
          "member": "McuPublishCdnParam",
          "name": "PublishCdnParams",
          "required": false,
          "type": "list"
        },
        {
          "default": "",
          "document": "The stream mixing SEI parameters.",
          "example": "SeiParams",
          "member": "McuSeiParams",
          "name": "SeiParams",
          "required": false,
          "type": "object"
        },
        {
          "default": "",
          "document": "The information of the room to which streams are relayed.",
          "example": "FeedBackRoomParams",
          "member": "McuFeedBackRoomParams",
          "name": "FeedBackRoomParams",
          "required": false,
          "type": "list"
        }
      ],
      "type": "object"
    },
    "UpdatePublishCdnStreamResponse": {
      "document": "UpdatePublishCdnStream response structure.",
      "members": [
        {
          "document": "The task ID.",
          "example": "xxxx",
          "member": "string",
          "name": "TaskId",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "document": "The unique request ID, which is returned for each request. RequestId is required for locating a problem.",
          "member": "string",
          "name": "RequestId",
          "type": "string"
        }
      ],
      "type": "object"
    },
    "UserMediaStream": {
      "document": "The stream information.",
      "members": [
        {
          "default": "",
          "document": "The user information.",
          "example": "MixUserInfo",
          "member": "MixUserInfo",
          "name": "UserInfo",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The stream type. 0: Camera; 1: Screen sharing. If you do not pass this parameter, 0 will be used.",
          "example": "0",
          "member": "uint64",
          "name": "StreamType",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "VideoEncode": {
      "document": "The video encoding parameters.",
      "members": [
        {
          "default": "",
          "document": "The width of the output stream (pixels). This parameter is required if audio and video are relayed. Value range: [0, 1920].",
          "example": "1280",
          "member": "uint64",
          "name": "Width",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The height of the output stream (pixels). This parameter is required if audio and video are relayed. Value range: [0, 1080].",
          "example": "720",
          "member": "uint64",
          "name": "Height",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The frame rate (fps) of the output stream. This parameter is required if audio and video are relayed. Value range: [0, 60].",
          "example": "15",
          "member": "uint64",
          "name": "Fps",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The bitrate (Kbps) of the output stream. This parameter is required if audio and video are relayed. Value range: [0, 10000].",
          "example": "1500",
          "member": "uint64",
          "name": "BitRate",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The GOP (seconds) of the output stream. This parameter is required if audio and video are relayed. Value range: [1, 5].",
          "example": "2",
          "member": "uint64",
          "name": "Gop",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "VideoParams": {
      "document": "The video transcoding parameters for recording.",
      "members": [
        {
          "default": "",
          "document": "The video width in pixels. The value of this parameter cannot be larger than 1920, and the result of multiplying `Width` and `Height` cannot exceed 1920 x 1080. The default value is `360`.",
          "example": "360",
          "member": "uint64",
          "name": "Width",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The video height in pixels. The value of this parameter cannot be larger than 1920, and the result of multiplying `Width` and `Height` cannot exceed 1920 x 1080. The default value is `640`.",
          "example": "640",
          "member": "uint64",
          "name": "Height",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The video frame rate. Value range: [1, 60]. Default: 15.",
          "example": "15",
          "member": "uint64",
          "name": "Fps",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The video bitrate (bps). Value range: [64000, 8192000]. Default: 550000.",
          "example": "550000",
          "member": "uint64",
          "name": "BitRate",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The keyframe interval (seconds). Default value: 10.",
          "example": "10",
          "member": "uint64",
          "name": "Gop",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "WaterMark": {
      "document": "The watermark layout.",
      "members": [
        {
          "default": "",
          "document": "The watermark type. 0 (default): image; 1: text (not supported yet).",
          "example": "0",
          "member": "uint64",
          "name": "WaterMarkType",
          "required": false,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The information of watermark images. This parameter is required if the watermark type is image.",
          "example": "无",
          "member": "WaterMarkImage",
          "name": "WaterMarkImage",
          "required": false,
          "type": "object",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    },
    "WaterMarkImage": {
      "document": "The information of watermark images.",
      "members": [
        {
          "default": "",
          "document": "The download URLs of the watermark images, which must be in JPG or PNG format and cannot be larger than 5 MB.",
          "example": "https://xxxx",
          "member": "string",
          "name": "WaterMarkUrl",
          "required": true,
          "type": "string",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The Y axis of the image's top-left corner. Value range: [0, 2560]. The value cannot be larger than the canvas height.",
          "example": "100",
          "member": "uint64",
          "name": "Top",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The X axis of the image’s top-left corner. Value range: [0, 2560]. The value cannot be larger than the canvas width.",
          "example": "100",
          "member": "uint64",
          "name": "Left",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The relative width of the image. Value range: [0, 2560]. The sum of the values of this parameter and `Left` cannot exceed the canvas width.",
          "example": "100",
          "member": "uint64",
          "name": "Width",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        },
        {
          "default": "",
          "document": "The relative height of the image. Value range: [0, 2560]. The sum of the values of this parameter and `Top` cannot exceed the canvas height.",
          "example": "100",
          "member": "uint64",
          "name": "Height",
          "required": true,
          "type": "int",
          "value_allowed_null": false
        }
      ],
      "usage": "in"
    }
  },
  "version": "1.0"
}